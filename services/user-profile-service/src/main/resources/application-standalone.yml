spring:
  cloud:
    config:
      enabled: false
    stream:
      source: domainEvents
      kafka:
        binder:
          brokers: "${KAFKA_BROKERS:localhost:9092}"
          zkNodes: "${ZOOKEEPER_NODES:localhost:2181}"
      bindings:
        domainEvents-out-0:
          destination: userprofile.zabardast
          producer:
            partition-key-expression: headers['Service']
  datasource:
    driver-class-name: org.h2.Driver
    url: "jdbc:h2:mem:userprofileservice;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS userprofileservice"
    username: sa
    password: sa
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "${KEYCLOCK_URL:https://localhost:8443}/auth/realms/${KEYCLOCK_REALM:zabardast}/protocol/openid-connect/certs"
      client:
        provider:
          keycloak:
            token-uri: "${KEYCLOCK_URL:https://localhost:8443}/auth/realms/${KEYCLOCK_REALM:zabardast}/protocol/openid-connect/token"
            authorization-uri: "${KEYCLOCK_URL:https://localhost:8443}/auth/realms/${KEYCLOCK_REALM:zabardast}/protocol/openid-connect/auth"
            userinfo-uri: "${KEYCLOCK_URL:https://localhost:8443}/auth/realms/${KEYCLOCK_REALM:zabardast}/protocol/openid-connect/userinfo"
            user-name-attribute: preferred_username
        registration:
          keycloak:
            provider: keycloak
            client-id: zabardast-service-client
            client-secret: "c2ac53d1-1179-4fca-bd6e-c421d1a37e59"
            authorization-grant-type: client_credentials
            redirect-uri: "{baseUrl}/login/oauth2/code/zabardast-service-client"
eureka:
  client:
    enabled: false


