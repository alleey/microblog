version: "3.7"

networks:
  default:
    name: zabardast.net
    ipam:
      config:
      - subnet: 172.33.0.0/16

volumes:
  postgres_data:
    driver: local
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_log:
    driver: local

services:
  # Infrastructure
  database:
    image: zabardast/postgres
    build:
      context: ./infra/postgres
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "zabardast"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:9094,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:9094,EXTERNAL://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    volumes:
      - kafka_data:/kafka
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 'zookeeper'
    volumes:
      - zookeeper_data:/opt/zookeeper-3.4.13/data
      - zookeeper_conf:/opt/zookeeper-3.4.13/conf

  keycloak:
    image: zabardast/keycloak
    build:
      context: ./infra/keycloak
      dockerfile: Dockerfile
      args:
        user: service
    ports:
      - "8080:8080"
      - "8443:8443"
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: database
      DB_DATABASE: zabardast
      DB_SCHEMA: keycloak
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    depends_on:
      - database

  eurekaserver:
    image: zabardast/eureka-service
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
      args:
        user: service
    ports:
       - "9001:9001"
    environment:
      SERVER_PORT: 9001
      EUREKA_URI: "http://eurekaserver:9001/eureka"

  # App services
  configserver:
    image: zabardast/config-service
    build:
      context: ./config-service
      dockerfile: Dockerfile
      args:
        user: service
    ports:
       - "9003:9003"
    environment:
      SERVER_PORT: 9003
      ENCRYPT_KEY: "IMSYMMETRIC"
      EUREKA_URI: "http://eurekaserver:9001/eureka"
      KEYCLOCK_URL: "http://keycloak:8080"
      KEYCLOCK_REALM: "zabardast"

  gateway:
    image: zabardast/gateway
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
      args:
        user: service
    ports:
       - "9000:9000"
    depends_on:
      - configserver
      - eurekaserver
      - keycloak
    environment:
      SERVER_PORT: 9000
      ENCRYPT_KEY: "IMSYMMETRIC"
      CONFIG_URI: "http://configserver:9003/config"
      EUREKA_URI: "http://eurekaserver:9001/eureka"
      KEYCLOCK_URL: "http://keycloak:8080"
      KEYCLOCK_REALM: "zabardast"

  blogserver:
    image: zabardast/blog-service
    build:
      context: ./blog-service
      dockerfile: Dockerfile
      args:
        user: service
    ports:
      - "9081:9081"
    restart: on-failure
    depends_on:
      - database
      - configserver
      - eurekaserver
      - keycloak
      - gateway
    environment:
      SERVER_PORT: 9081
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
      CONFIG_URI: "http://configserver:9003/config"
      EUREKA_URI: "http://eurekaserver:9001/eureka"
      KEYCLOCK_URL: "http://keycloak:8080"
      KEYCLOCK_REALM: "zabardast"

  bookmarkserver:
    image: zabardast/bookmark-service
    build:
      context: ./bookmark-service
      dockerfile: Dockerfile
      args:
        user: service
    ports:
      - "9080:9080"
    restart: on-failure
    depends_on:
      - database
      - configserver
      - eurekaserver
      - keycloak
      - gateway
    environment:
      SERVER_PORT: 9080
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
      CONFIG_URI: "http://configserver:9003/config"
      EUREKA_URI: "http://eurekaserver:9001/eureka"
      KEYCLOCK_URL: "http://keycloak:8080"
      KEYCLOCK_REALM: "zabardast"

  userprofileserver:
    image: zabardast/user-profile-service
    build:
      context: ./user-profile-service
      dockerfile: Dockerfile
      args:
        user: service
    ports:
      - "9082:9082"
    restart: on-failure
    depends_on:
      - database
      - configserver
      - eurekaserver
      - keycloak
      - gateway
    environment:
      SERVER_PORT: 9082
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
      CONFIG_URI: "http://configserver:9003/config"
      EUREKA_URI: "http://eurekaserver:9001/eureka"
      KEYCLOCK_URL: "http://keycloak:8080"
      KEYCLOCK_REALM: "zabardast"

  followersserver:
    image: zabardast/followers-service
    build:
      context: ./followers-service
      dockerfile: Dockerfile
      args:
        user: service
    ports:
      - "9083:9083"
    restart: on-failure
    depends_on:
      - database
      - configserver
      - eurekaserver
      - keycloak
      - gateway
    environment:
      SERVER_PORT: 9083
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
      CONFIG_URI: "http://configserver:9003/config"
      EUREKA_URI: "http://eurekaserver:9001/eureka"
      KEYCLOCK_URL: "http://keycloak:8080"
      KEYCLOCK_REALM: "zabardast"

  statsserver:
    image: zabardast/stats-service
    build:
      context: ./stats-service
      dockerfile: Dockerfile
      args:
        user: service
    ports:
      - "9084:9084"
    restart: on-failure
    depends_on:
      - database
      - configserver
      - eurekaserver
      - keycloak
      - gateway
    environment:
      SERVER_PORT: 9084
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
      CONFIG_URI: "http://configserver:9003/config"
      EUREKA_URI: "http://eurekaserver:9001/eureka"
      KEYCLOCK_URL: "http://keycloak:8080"
      KEYCLOCK_REALM: "zabardast"

  webapp:
    image: zabardast/webapp
    build:
      context: ./webapp
      dockerfile: Dockerfile
      args:
        user: service
    ports:
      - "4200:80"
    restart: on-failure
    depends_on:
      - bookmarkserver
      - blogserver
      - userprofileserver
      - followersserver
      - statsserver

  logspout:
    image: gliderlabs/logspout
    command: syslog://logs3.papertrailapp.com:48292
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
