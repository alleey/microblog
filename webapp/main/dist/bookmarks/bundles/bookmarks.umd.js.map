{"version":3,"file":"bookmarks.umd.js","sources":["../../../projects/bookmarks/src/lib/config/config.ts","../../../projects/bookmarks/src/lib/config/public-api.ts","../../../projects/bookmarks/src/lib/models/public-api.ts","../../../projects/bookmarks/src/lib/services/bookmarks.service.ts","../../../projects/bookmarks/src/lib/components/bookmark-list-view/bookmark-list-view.component.ts","../../../projects/bookmarks/src/lib/components/bookmark-list-view/bookmark-list-view.component.html","../../../projects/bookmarks/src/lib/components/bookmark-list/bookmark-list.component.ts","../../../projects/bookmarks/src/lib/components/bookmark-list/bookmark-list.component.html","../../../projects/bookmarks/src/lib/components/bookmark-badge/bookmark-badge.component.ts","../../../projects/bookmarks/src/lib/components/bookmark-badge/bookmark-badge.component.html","../../../projects/bookmarks/src/lib/components/public-api.ts","../../../projects/bookmarks/src/lib/services/public-api.ts","../../../projects/bookmarks/src/lib/bookmarks.module.ts","../../../projects/bookmarks/src/public-api.ts","../../../projects/bookmarks/src/bookmarks.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface BookmarksServiceConfig {\n  serviceBaseUrl: string,\n  defaultEndpoint: string,\n  pageSize: number,\n}\n\nexport const BookmarksServiceConfigToken = new InjectionToken<BookmarksServiceConfig>(\"BookmarksServiceConfig\");\n\nexport interface BookmarksModuleConfig {\n  bookmarks: BookmarksServiceConfig;\n}\nexport const BookmarksModuleConfigToken = new InjectionToken<BookmarksModuleConfig>(\"BookmarksModuleConfig\");\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './config';\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './bookmark';\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Pageable } from 'utils';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, map, tap } from \"rxjs/operators\";\nimport { BookmarkResponseModel, BookmarkListResponseModel } from '../models/bookmark';\nimport { BookmarksServiceConfig, BookmarksServiceConfigToken } from '../config/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookmarksService {\n\n  public onChange: Subject<any> = new Subject<any>();\n\n  constructor(\n    @Inject(BookmarksServiceConfigToken) \n    private config: BookmarksServiceConfig,\n    private httpClient: HttpClient) { \n  }\n\n  public all(endpoint: string, pageable?: Pageable): Observable<BookmarkListResponseModel> {\n\n    const page: number = pageable ? pageable.page : 0;\n    const pageSize: number = (pageable && pageable.limit) ? pageable.limit : this.config.pageSize;\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n\n    return this.httpClient\n            .get<BookmarkListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}`, {\n              params: {\n                \"page\": page.toString(),\n                \"size\": pageSize.toString(),\n                \"sort\": \"caption,asc\"\n              }\n            })\n            .pipe(\n              map(data => {\n                return data as BookmarkListResponseModel;\n              })\n            );\n  }\n\n  public findMatchingCaption(endpoint: string, caption: string, pageable?: Pageable): Observable<BookmarkListResponseModel> {\n    const query = {\n      \"conditions\": [\n        { \"attribute\": \"caption\", \"operator\": \"like\", \"value\": `%${caption}%` }\n      ]\n    };\n    return this.search(endpoint, query, pageable);\n  }\n\n  public search(endpoint: string, query: any, pageable?: Pageable): Observable<BookmarkListResponseModel> {\n\n    const page: number = pageable ? pageable.page : 0;\n    const pageSize: number = (pageable && pageable.limit) ? pageable.limit : this.config.pageSize;\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n\n    return this.httpClient\n            .get<BookmarkListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/search`, \n            {\n              \"params\": { \n                \"q\": JSON.stringify(query),\n                \"page\": page.toString(),\n                \"size\": pageSize.toString(),\n                \"sort\": \"caption,asc\"\n              }\n            })\n            .pipe(\n              map(data => {\n                return data as BookmarkListResponseModel;\n              })\n            );\n  }\n\n  public findByUrl(endpoint: string, url: string): Observable<BookmarkResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    const query = {\n      \"conditions\": [\n        { \"attribute\": \"url\", \"operator\": \"eq\", \"value\": url }\n      ]\n    };\n    return this.httpClient\n            .get<BookmarkListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/search`, \n            {\n              \"params\": { \"q\": JSON.stringify(query) }\n            })\n            .pipe(\n              map(data => {\n                return data._embedded.bookmarks[0] as BookmarkResponseModel;\n              })\n            );\n  }\n\n  public create(endpoint: string, caption: string, url: string): Observable<BookmarkResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    const boomarkRepr = {\n      \"url\": url, \"caption\": caption\n    };\n    return this.httpClient\n            .post<BookmarkResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}`, boomarkRepr)\n            .pipe(\n              map(data => {\n                return data as BookmarkResponseModel;\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n\n  public delete(endpoint: string, id: number): Observable<void> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n            .delete<void>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${id}`)\n            .pipe(\n              catchError((error: any) => {\n                return throwError(new Error(error.status));\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n}\n","import { Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ViewEvent } from 'utils';\nimport { BookmarkModel } from '../../models/bookmark';\n\nexport type BookmarkListViewEvent = ViewEvent<BookmarkModel>;\n\n@Component({\n  selector: 'bookmark-list-view',\n  templateUrl: './bookmark-list-view.component.html',\n  styleUrls: ['./bookmark-list-view.component.scss']\n})\nexport class BookmarkListViewComponent implements OnInit {\n\n  @Input() bookmarks?: BookmarkModel[];\n  @Input() itemTemplate: TemplateRef<any> | undefined;\n  @Input() noContentsTemplate: TemplateRef<any> | undefined;\n\n  @Output() \n  onSelectItem = new EventEmitter<BookmarkListViewEvent>();\n\n  ngOnInit(): void {}\n    \n  selectItem(item: BookmarkModel, opcode: string): void {\n    this.onSelectItem.emit({\n      opcode: opcode,\n      item: item\n    });\n  }\n}","<ng-container *ngIf=\"bookmarks\">\n    <ul class=\"list-group checked-list-box\">\n        <li class=\"list-group-item\" *ngFor=\"let x of bookmarks; index as i\">\n            <ng-container \n                [ngTemplateOutlet]=\"itemTemplate || defaultItemTemplate\"\n                [ngTemplateOutletContext]=\"{ $implicit: x, index: i, list: this }\">\n            </ng-container>\n        </li>\n    </ul>\n</ng-container>\n<ng-container *ngIf=\"!bookmarks\">\n    <ng-container \n        [ngTemplateOutlet]=\"noContentsTemplate || defaultNoContentsTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n</ng-container>\n\n<ng-template #defaultItemTemplate let-item let-parent=\"list\">\n    <i class=\"fa fa-times\" (click)=\"parent.selectItem(item, 'delete')\"></i>\n    <a class=\"ml-2\" class=\"ml-1 bookmark-list-bookmark-title\" (click)=\"parent.selectItem(item, 'select')\">{{item.caption}}</a>\n</ng-template>\n\n<ng-template #defaultNoContentsTemplate let-item>\n    No bookmark found!\n</ng-template>","import { Component, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { BookmarkModel, BookmarkListResponseModel } from '../../models/bookmark';\nimport { BookmarksService } from '../../services/bookmarks.service';\nimport { Pageable, PageModel } from 'utils';\nimport { BookmarkListViewEvent } from '../bookmark-list-view/bookmark-list-view.component';\n\n@Component({\n  selector: 'bookmark-list',\n  templateUrl: './bookmark-list.component.html',\n  styleUrls: ['./bookmark-list.component.scss']\n})\nexport class BookmarkListComponent implements OnInit, OnDestroy {\n\n  @Input() enableSearch: boolean = true;\n  @Input() filterText: string = '';\n\n  @Input() itemTemplate: TemplateRef<any> | undefined;\n  @Input() noContentsTemplate: TemplateRef<any> | undefined;\n  @Input() headerTemplate: TemplateRef<any> | undefined;\n  @Input() footerTemplate: TemplateRef<any> | undefined;\n\n  @Input('onSelectBookmark') \n  onSelect: (topic: BookmarkModel) => void = \n    (item) => this.navigateBookmark(item);\n        \n  pageable: Pageable; \n  response : BookmarkListResponseModel|null;\n  errorDesc: any = \"\";\n  loading: boolean = false;\n  subscription: Subscription = new Subscription();\n\n  constructor(\n      private bookmarksService: BookmarksService, \n      private router: Router, \n      private activatedRoute: ActivatedRoute) \n  { \n    this.response = null;\n    this.pageable = {\n      page: 0\n    };\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      const pageNum = params.pageNum ?? 0;\n      this.fetchPage(pageNum);\n    });\n    // Requery when the backend data changes\n    this.subscription.add(\n      this.bookmarksService.onChange.subscribe({ next: () => this.fetchPage(this.pageable.page) })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  onApplyFilter(text: string): void {\n    this.filterText = text;\n    this.fetchPage(0);\n  }\n\n  responseHandler = {\n    next: (result: BookmarkListResponseModel) => {\n      this.response = result;\n      this.loading = false;\n    },\n    error: (err: any) => {\n      this.errorDesc = err.message;\n      this.loading = false;\n      console.log(this.errorDesc);\n    }\n  }\n\n  fetchPage(pageNum: number): void {\n    this.pageable.page = pageNum;\n    if(!!this.filterText)\n    {\n      this.bookmarksService.findMatchingCaption(\"\", this.filterText, this.pageable).subscribe(this.responseHandler);\n    }\n    else\n    {\n      this.bookmarksService.all(\"\", this.pageable).subscribe(this.responseHandler);\n    }\n  }\n\n  get items(): BookmarkModel[]|undefined {\n    return this.response?._embedded?.bookmarks;\n  }\n\n  get page(): PageModel|undefined {\n    return this.response?.page;\n  }\n\n  get hasItems(): boolean {\n    return !!(this.page?.totalElements);\n  }\n\n  handleListViewEvent(evt: BookmarkListViewEvent) {\n    switch(evt.opcode) {\n      case 'select': this.onSelect(evt.item); break;\n      case 'delete': this.deleteBookmark(evt.item); break;\n    }\n  }\n\n  navigateBookmark(bookmark: BookmarkModel): void {\n    console.info(`Navigate to ${bookmark.url}`)\n    window.location.href = bookmark.url;\n  }\n\n  deleteBookmark(bookmark: BookmarkModel): void {\n    this.bookmarksService.delete(\"\", bookmark.id)\n      .subscribe(\n        {\n          error: (err: any) => {\n            this.errorDesc = err.message;\n          }\n        }\n      );\n  }\n\n  gotoPage(evt:any): void {\n    this.fetchPage(evt-1);\n  }\n}\n","<div *ngIf=\"loading; else contents\">\n    <utils-loader></utils-loader>\n</div>\n\n<ng-template #contents>\n    <utils-alert *ngIf=\"errorDesc;else itemsList\" [dismissable]=\"false\" [minimal]=\"true\">\n        <p>An error occurred fetching the bookmarks list: {{ errorDesc }}</p>\n    </utils-alert>\n</ng-template>\n\n<ng-template #itemsList>\n\n    <ng-container\n        [ngTemplateOutlet]=\"headerTemplate || defaultHeaderTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n\n    <div class=\"py-1\">\n        <utils-search-box (onApplyFilter)=\"onApplyFilter\" *ngIf=\"enableSearch\"></utils-search-box>\n        <bookmark-list-view\n            [bookmarks]=\"items\"\n            [itemTemplate]=\"itemTemplate\"\n            [noContentsTemplate]=\"noContentsTemplate\"\n            (onSelectItem)=\"handleListViewEvent($event)\">\n        </bookmark-list-view>\n        <utils-pager [page]=\"page\" (onSelectPage)=\"gotoPage($event)\"></utils-pager>\n    </div>\n\n    <ng-container\n        [ngTemplateOutlet]=\"footerTemplate || defaultFooterTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n\n</ng-template>\n\n<ng-template #defaultHeaderTemplate>\n</ng-template>\n\n<ng-template #defaultFooterTemplate>\n</ng-template>\n","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BookmarkModel, BookmarkResponseModel } from '../../models/bookmark';\nimport { BookmarksService } from '../../services/bookmarks.service';\n\n@Component({\n  selector: 'bookmark-badge',\n  templateUrl: './bookmark-badge.component.html',\n  styleUrls: ['./bookmark-badge.component.scss']\n})\nexport class BookmarkBadgeComponent implements OnInit {\n\n  @Input() url: string = \"\";\n  @Input() caption: string = \"\";\n\n  @Input() activeControlTemplate: TemplateRef<any> | undefined;\n  @Input() inactiveControlTemplate: TemplateRef<any> | undefined;\n\n  item?: BookmarkModel;\n  loading: boolean = false;\n\n  constructor(private service: BookmarksService) { }\n\n  ngOnInit(): void {\n    this.checkStatus();\n  }\n\n  get isActive(): boolean {\n    return this.item?.id != undefined;\n  }\n\n  responseHandler = {\n    next: (result: BookmarkResponseModel) => {\n      this.item = result;\n      this.loading = false;\n      console.log(result);\n\n    },\n    error: (err: any) => {\n      this.loading = false;\n      console.log(err.message);\n    }\n  };\n\n  checkStatus() {\n    this.service.findByUrl(\"bookmarks\", this.url).subscribe(this.responseHandler);\n  }\n\n  createBookmark(): void {\n    this.service.create(\"bookmarks\", this.caption, this.url).subscribe(this.responseHandler);\n  }\n\n  deleteBookmark(): void {\n    if(this.item)\n      this.service.delete(\"bookmarks\", this.item.id).subscribe({\n        next: () => {},\n        error: (err: any) => {\n          console.log(err.message);\n        }\n      });\n  }\n}\n","<utils-badge \n    [isActive]=\"isActive\"\n    [activeCaption]=\"'Bookmark'\"\n    [activeControlTemplate]=\"activeControlTemplate\"\n    [inactiveControlTemplate]=\"inactiveControlTemplate\"\n    (onAdd)=\"createBookmark()\"\n    (onRemove)=\"deleteBookmark()\">\n</utils-badge>","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './bookmark-list/bookmark-list.component';\nexport * from './bookmark-list-view/bookmark-list-view.component';\nexport * from './bookmark-badge/bookmark-badge.component';\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './bookmarks.service';\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { OidcAuthModule } from 'auth-oidc';\nimport { UtilsModule } from 'utils';\nimport { BookmarkListComponent, BookmarkListViewComponent, BookmarkBadgeComponent } from './components/public-api';\nimport { BookmarksModuleConfig, BookmarksServiceConfigToken } from './config/config';\nimport { BookmarksService } from './services/bookmarks.service';\n\n@NgModule({\n  declarations: [\n    BookmarkListViewComponent,\n    BookmarkListComponent,\n    BookmarkBadgeComponent\n  ],\n  imports: [\n    CommonModule,\n    OidcAuthModule.forChild(),\n    UtilsModule\n  ],\n  exports: [\n    BookmarkListViewComponent,\n    BookmarkListComponent,\n    BookmarkBadgeComponent\n  ]\n})\nexport class BookmarksModule { \n\n  static forRoot(config: BookmarksModuleConfig): ModuleWithProviders<BookmarksModule> {\n    return {\n      ngModule: BookmarksModule,\n      providers: [\n        BookmarksService,\n        {\n          provide: BookmarksServiceConfigToken,\n          useValue: config.bookmarks\n        }\n      ]\n    }\n  }\n\n}\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './lib/config/public-api';\nexport * from './lib/models/public-api';\nexport * from './lib/components/public-api';\nexport * from './lib/services/public-api';\nexport * from './lib/bookmarks.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["InjectionToken","Subject","map","tap","catchError","throwError","Injectable","Inject","EventEmitter","Component","Input","Output","Subscription","CommonModule","UtilsModule","OidcAuthModule","NgModule"],"mappings":"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"}