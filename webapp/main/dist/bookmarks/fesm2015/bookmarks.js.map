{"version":3,"file":"bookmarks.js","sources":["../../../projects/bookmarks/src/lib/config/config.ts","../../../projects/bookmarks/src/lib/config/public-api.ts","../../../projects/bookmarks/src/lib/models/public-api.ts","../../../projects/bookmarks/src/lib/services/bookmarks.service.ts","../../../projects/bookmarks/src/lib/components/bookmark-list-view/bookmark-list-view.component.ts","../../../projects/bookmarks/src/lib/components/bookmark-list-view/bookmark-list-view.component.html","../../../projects/bookmarks/src/lib/components/bookmark-list/bookmark-list.component.ts","../../../projects/bookmarks/src/lib/components/bookmark-list/bookmark-list.component.html","../../../projects/bookmarks/src/lib/components/bookmark-badge/bookmark-badge.component.ts","../../../projects/bookmarks/src/lib/components/bookmark-badge/bookmark-badge.component.html","../../../projects/bookmarks/src/lib/components/public-api.ts","../../../projects/bookmarks/src/lib/services/public-api.ts","../../../projects/bookmarks/src/lib/bookmarks.module.ts","../../../projects/bookmarks/src/public-api.ts","../../../projects/bookmarks/src/bookmarks.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface BookmarksServiceConfig {\n  serviceBaseUrl: string,\n  defaultEndpoint: string,\n  pageSize: number,\n}\n\nexport const BookmarksServiceConfigToken = new InjectionToken<BookmarksServiceConfig>(\"BookmarksServiceConfig\");\n\nexport interface BookmarksModuleConfig {\n  bookmarks: BookmarksServiceConfig;\n}\nexport const BookmarksModuleConfigToken = new InjectionToken<BookmarksModuleConfig>(\"BookmarksModuleConfig\");\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './config';\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './bookmark';\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Pageable } from 'utils';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, map, tap } from \"rxjs/operators\";\nimport { BookmarkResponseModel, BookmarkListResponseModel } from '../models/bookmark';\nimport { BookmarksServiceConfig, BookmarksServiceConfigToken } from '../config/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookmarksService {\n\n  public onChange: Subject<any> = new Subject<any>();\n\n  constructor(\n    @Inject(BookmarksServiceConfigToken) \n    private config: BookmarksServiceConfig,\n    private httpClient: HttpClient) { \n  }\n\n  public all(endpoint: string, pageable?: Pageable): Observable<BookmarkListResponseModel> {\n\n    const page: number = pageable ? pageable.page : 0;\n    const pageSize: number = (pageable && pageable.limit) ? pageable.limit : this.config.pageSize;\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n\n    return this.httpClient\n            .get<BookmarkListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}`, {\n              params: {\n                \"page\": page.toString(),\n                \"size\": pageSize.toString(),\n                \"sort\": \"caption,asc\"\n              }\n            })\n            .pipe(\n              map(data => {\n                return data as BookmarkListResponseModel;\n              })\n            );\n  }\n\n  public findMatchingCaption(endpoint: string, caption: string, pageable?: Pageable): Observable<BookmarkListResponseModel> {\n    const query = {\n      \"conditions\": [\n        { \"attribute\": \"caption\", \"operator\": \"like\", \"value\": `%${caption}%` }\n      ]\n    };\n    return this.search(endpoint, query, pageable);\n  }\n\n  public search(endpoint: string, query: any, pageable?: Pageable): Observable<BookmarkListResponseModel> {\n\n    const page: number = pageable ? pageable.page : 0;\n    const pageSize: number = (pageable && pageable.limit) ? pageable.limit : this.config.pageSize;\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n\n    return this.httpClient\n            .get<BookmarkListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/search`, \n            {\n              \"params\": { \n                \"q\": JSON.stringify(query),\n                \"page\": page.toString(),\n                \"size\": pageSize.toString(),\n                \"sort\": \"caption,asc\"\n              }\n            })\n            .pipe(\n              map(data => {\n                return data as BookmarkListResponseModel;\n              })\n            );\n  }\n\n  public findByUrl(endpoint: string, url: string): Observable<BookmarkResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    const query = {\n      \"conditions\": [\n        { \"attribute\": \"url\", \"operator\": \"eq\", \"value\": url }\n      ]\n    };\n    return this.httpClient\n            .get<BookmarkListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/search`, \n            {\n              \"params\": { \"q\": JSON.stringify(query) }\n            })\n            .pipe(\n              map(data => {\n                return data._embedded.bookmarks[0] as BookmarkResponseModel;\n              })\n            );\n  }\n\n  public create(endpoint: string, caption: string, url: string): Observable<BookmarkResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    const boomarkRepr = {\n      \"url\": url, \"caption\": caption\n    };\n    return this.httpClient\n            .post<BookmarkResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}`, boomarkRepr)\n            .pipe(\n              map(data => {\n                return data as BookmarkResponseModel;\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n\n  public delete(endpoint: string, id: number): Observable<void> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n            .delete<void>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${id}`)\n            .pipe(\n              catchError((error: any) => {\n                return throwError(new Error(error.status));\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n}\n","import { Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ViewEvent } from 'utils';\nimport { BookmarkModel } from '../../models/bookmark';\n\nexport type BookmarkListViewEvent = ViewEvent<BookmarkModel>;\n\n@Component({\n  selector: 'bookmark-list-view',\n  templateUrl: './bookmark-list-view.component.html',\n  styleUrls: ['./bookmark-list-view.component.scss']\n})\nexport class BookmarkListViewComponent implements OnInit {\n\n  @Input() bookmarks?: BookmarkModel[];\n  @Input() itemTemplate: TemplateRef<any> | undefined;\n  @Input() noContentsTemplate: TemplateRef<any> | undefined;\n\n  @Output() \n  onSelectItem = new EventEmitter<BookmarkListViewEvent>();\n\n  ngOnInit(): void {}\n    \n  selectItem(item: BookmarkModel, opcode: string): void {\n    this.onSelectItem.emit({\n      opcode: opcode,\n      item: item\n    });\n  }\n}","<ng-container *ngIf=\"bookmarks\">\n    <ul class=\"list-group checked-list-box\">\n        <li class=\"list-group-item\" *ngFor=\"let x of bookmarks; index as i\">\n            <ng-container \n                [ngTemplateOutlet]=\"itemTemplate || defaultItemTemplate\"\n                [ngTemplateOutletContext]=\"{ $implicit: x, index: i, list: this }\">\n            </ng-container>\n        </li>\n    </ul>\n</ng-container>\n<ng-container *ngIf=\"!bookmarks\">\n    <ng-container \n        [ngTemplateOutlet]=\"noContentsTemplate || defaultNoContentsTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n</ng-container>\n\n<ng-template #defaultItemTemplate let-item let-parent=\"list\">\n    <i class=\"fa fa-times\" (click)=\"parent.selectItem(item, 'delete')\"></i>\n    <a class=\"ml-2\" class=\"ml-1 bookmark-list-bookmark-title\" (click)=\"parent.selectItem(item, 'select')\">{{item.caption}}</a>\n</ng-template>\n\n<ng-template #defaultNoContentsTemplate let-item>\n    No bookmark found!\n</ng-template>","import { Component, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { BookmarkModel, BookmarkListResponseModel } from '../../models/bookmark';\nimport { BookmarksService } from '../../services/bookmarks.service';\nimport { Pageable, PageModel } from 'utils';\nimport { BookmarkListViewEvent } from '../bookmark-list-view/bookmark-list-view.component';\n\n@Component({\n  selector: 'bookmark-list',\n  templateUrl: './bookmark-list.component.html',\n  styleUrls: ['./bookmark-list.component.scss']\n})\nexport class BookmarkListComponent implements OnInit, OnDestroy {\n\n  @Input() enableSearch: boolean = true;\n  @Input() filterText: string = '';\n\n  @Input() itemTemplate: TemplateRef<any> | undefined;\n  @Input() noContentsTemplate: TemplateRef<any> | undefined;\n  @Input() headerTemplate: TemplateRef<any> | undefined;\n  @Input() footerTemplate: TemplateRef<any> | undefined;\n\n  @Input('onSelectBookmark') \n  onSelect: (topic: BookmarkModel) => void = \n    (item) => this.navigateBookmark(item);\n        \n  pageable: Pageable; \n  response : BookmarkListResponseModel|null;\n  errorDesc: any = \"\";\n  loading: boolean = false;\n  subscription: Subscription = new Subscription();\n\n  constructor(\n      private bookmarksService: BookmarksService, \n      private router: Router, \n      private activatedRoute: ActivatedRoute) \n  { \n    this.response = null;\n    this.pageable = {\n      page: 0\n    };\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      const pageNum = params.pageNum ?? 0;\n      this.fetchPage(pageNum);\n    });\n    // Requery when the backend data changes\n    this.subscription.add(\n      this.bookmarksService.onChange.subscribe({ next: () => this.fetchPage(this.pageable.page) })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  onApplyFilter(text: string): void {\n    this.filterText = text;\n    this.fetchPage(0);\n  }\n\n  responseHandler = {\n    next: (result: BookmarkListResponseModel) => {\n      this.response = result;\n      this.loading = false;\n    },\n    error: (err: any) => {\n      this.errorDesc = err.message;\n      this.loading = false;\n      console.log(this.errorDesc);\n    }\n  }\n\n  fetchPage(pageNum: number): void {\n    this.pageable.page = pageNum;\n    if(!!this.filterText)\n    {\n      this.bookmarksService.findMatchingCaption(\"\", this.filterText, this.pageable).subscribe(this.responseHandler);\n    }\n    else\n    {\n      this.bookmarksService.all(\"\", this.pageable).subscribe(this.responseHandler);\n    }\n  }\n\n  get items(): BookmarkModel[]|undefined {\n    return this.response?._embedded?.bookmarks;\n  }\n\n  get page(): PageModel|undefined {\n    return this.response?.page;\n  }\n\n  get hasItems(): boolean {\n    return !!(this.page?.totalElements);\n  }\n\n  handleListViewEvent(evt: BookmarkListViewEvent) {\n    switch(evt.opcode) {\n      case 'select': this.onSelect(evt.item); break;\n      case 'delete': this.deleteBookmark(evt.item); break;\n    }\n  }\n\n  navigateBookmark(bookmark: BookmarkModel): void {\n    console.info(`Navigate to ${bookmark.url}`)\n    window.location.href = bookmark.url;\n  }\n\n  deleteBookmark(bookmark: BookmarkModel): void {\n    this.bookmarksService.delete(\"\", bookmark.id)\n      .subscribe(\n        {\n          error: (err: any) => {\n            this.errorDesc = err.message;\n          }\n        }\n      );\n  }\n\n  gotoPage(evt:any): void {\n    this.fetchPage(evt-1);\n  }\n}\n","<div *ngIf=\"loading; else contents\">\n    <utils-loader></utils-loader>\n</div>\n\n<ng-template #contents>\n    <utils-alert *ngIf=\"errorDesc;else itemsList\" [dismissable]=\"false\" [minimal]=\"true\">\n        <p>An error occurred fetching the bookmarks list: {{ errorDesc }}</p>\n    </utils-alert>\n</ng-template>\n\n<ng-template #itemsList>\n\n    <ng-container\n        [ngTemplateOutlet]=\"headerTemplate || defaultHeaderTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n\n    <div class=\"py-1\">\n        <utils-search-box (onApplyFilter)=\"onApplyFilter\" *ngIf=\"enableSearch\"></utils-search-box>\n        <bookmark-list-view\n            [bookmarks]=\"items\"\n            [itemTemplate]=\"itemTemplate\"\n            [noContentsTemplate]=\"noContentsTemplate\"\n            (onSelectItem)=\"handleListViewEvent($event)\">\n        </bookmark-list-view>\n        <utils-pager [page]=\"page\" (onSelectPage)=\"gotoPage($event)\"></utils-pager>\n    </div>\n\n    <ng-container\n        [ngTemplateOutlet]=\"footerTemplate || defaultFooterTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n\n</ng-template>\n\n<ng-template #defaultHeaderTemplate>\n</ng-template>\n\n<ng-template #defaultFooterTemplate>\n</ng-template>\n","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BookmarkModel, BookmarkResponseModel } from '../../models/bookmark';\nimport { BookmarksService } from '../../services/bookmarks.service';\n\n@Component({\n  selector: 'bookmark-badge',\n  templateUrl: './bookmark-badge.component.html',\n  styleUrls: ['./bookmark-badge.component.scss']\n})\nexport class BookmarkBadgeComponent implements OnInit {\n\n  @Input() url: string = \"\";\n  @Input() caption: string = \"\";\n\n  @Input() activeControlTemplate: TemplateRef<any> | undefined;\n  @Input() inactiveControlTemplate: TemplateRef<any> | undefined;\n\n  item?: BookmarkModel;\n  loading: boolean = false;\n\n  constructor(private service: BookmarksService) { }\n\n  ngOnInit(): void {\n    this.checkStatus();\n  }\n\n  get isActive(): boolean {\n    return this.item?.id != undefined;\n  }\n\n  responseHandler = {\n    next: (result: BookmarkResponseModel) => {\n      this.item = result;\n      this.loading = false;\n      console.log(result);\n\n    },\n    error: (err: any) => {\n      this.loading = false;\n      console.log(err.message);\n    }\n  };\n\n  checkStatus() {\n    this.service.findByUrl(\"bookmarks\", this.url).subscribe(this.responseHandler);\n  }\n\n  createBookmark(): void {\n    this.service.create(\"bookmarks\", this.caption, this.url).subscribe(this.responseHandler);\n  }\n\n  deleteBookmark(): void {\n    if(this.item)\n      this.service.delete(\"bookmarks\", this.item.id).subscribe({\n        next: () => {},\n        error: (err: any) => {\n          console.log(err.message);\n        }\n      });\n  }\n}\n","<utils-badge \n    [isActive]=\"isActive\"\n    [activeCaption]=\"'Bookmark'\"\n    [activeControlTemplate]=\"activeControlTemplate\"\n    [inactiveControlTemplate]=\"inactiveControlTemplate\"\n    (onAdd)=\"createBookmark()\"\n    (onRemove)=\"deleteBookmark()\">\n</utils-badge>","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './bookmark-list/bookmark-list.component';\nexport * from './bookmark-list-view/bookmark-list-view.component';\nexport * from './bookmark-badge/bookmark-badge.component';\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './bookmarks.service';\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { OidcAuthModule } from 'auth-oidc';\nimport { UtilsModule } from 'utils';\nimport { BookmarkListComponent, BookmarkListViewComponent, BookmarkBadgeComponent } from './components/public-api';\nimport { BookmarksModuleConfig, BookmarksServiceConfigToken } from './config/config';\nimport { BookmarksService } from './services/bookmarks.service';\n\n@NgModule({\n  declarations: [\n    BookmarkListViewComponent,\n    BookmarkListComponent,\n    BookmarkBadgeComponent\n  ],\n  imports: [\n    CommonModule,\n    OidcAuthModule.forChild(),\n    UtilsModule\n  ],\n  exports: [\n    BookmarkListViewComponent,\n    BookmarkListComponent,\n    BookmarkBadgeComponent\n  ]\n})\nexport class BookmarksModule { \n\n  static forRoot(config: BookmarksModuleConfig): ModuleWithProviders<BookmarksModule> {\n    return {\n      ngModule: BookmarksModule,\n      providers: [\n        BookmarksService,\n        {\n          provide: BookmarksServiceConfigToken,\n          useValue: config.bookmarks\n        }\n      ]\n    }\n  }\n\n}\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './lib/config/public-api';\nexport * from './lib/models/public-api';\nexport * from './lib/components/public-api';\nexport * from './lib/services/public-api';\nexport * from './lib/bookmarks.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}