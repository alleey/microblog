{"version":3,"file":"auth-oidc.js","sources":["../../../projects/auth-oidc/src/lib/services/auth.service.ts","../../../projects/auth-oidc/src/lib/components/login-callback.component.ts","../../../projects/auth-oidc/src/lib/components/login-redirect.component.ts","../../../projects/auth-oidc/src/lib/components/logout-callback.component.ts","../../../projects/auth-oidc/src/lib/components/logout-redirect.component.ts","../../../projects/auth-oidc/src/lib/components/public-api.ts","../../../projects/auth-oidc/src/lib/directives/require-login.directive.ts","../../../projects/auth-oidc/src/lib/directives/require-owner.directive.ts","../../../projects/auth-oidc/src/lib/directives/require-role.directive.ts","../../../projects/auth-oidc/src/lib/directives/public-api.ts","../../../projects/auth-oidc/src/lib/guards/auth.guard.ts","../../../projects/auth-oidc/src/lib/guards/public-api.ts","../../../projects/auth-oidc/src/lib/services/public-api.ts","../../../projects/auth-oidc/src/lib/auth-routing.module.ts","../../../projects/auth-oidc/src/lib/interceptors/auth.interceptor.ts","../../../projects/auth-oidc/src/lib/auth-oidc.module.ts","../../../projects/auth-oidc/src/public-api.ts","../../../projects/auth-oidc/src/auth-oidc.ts"],"sourcesContent":["import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Router, RouterStateSnapshot } from '@angular/router';\n\nimport { UserManager, UserManagerSettings, User, Profile } from 'oidc-client';\nimport { BehaviorSubject } from 'rxjs';\n\n\nexport interface OidcAuthConfig {\n  clientId: string,               // client_id\n  filterProtocolClaims?: boolean, // filterProtocolClaims\n  grantType?: string,\n  issuer: string,                 // authority\n  loadUserInfo?: boolean,         // loadUserInfo\n  postLogoutRedirectUri?: string, // post_logout_redirect_uri\n  redirectUri: string,            // redirect_uri\n  responseType: string,           // response_type\n  scope: string,                  // scope\n  mock?: any                       // for testing/development\n}\n\nexport const OidcAuthConfigToken = new InjectionToken<OidcAuthConfig>(\"AuthServiceConfig\");\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OidcAuthService {\n\n  private userManager: UserManager;\n  private user: User | null = null;\n  private redirectUrl!: string;\n\n  public userSubject = new BehaviorSubject<Profile|undefined>(undefined); \n\n  constructor(\n    @Inject(OidcAuthConfigToken) private config: OidcAuthConfig, \n    private router: Router) \n  {\n    const oidcConfig: UserManagerSettings = {\n      authority: this.config.issuer,\n      client_id: this.config.clientId,\n      redirect_uri: this.config.redirectUri,\n      post_logout_redirect_uri: this.config.postLogoutRedirectUri,\n      response_type: this.config.responseType,\n      scope: this.config.scope,\n      filterProtocolClaims: this.config.filterProtocolClaims,\n      loadUserInfo: this.config.loadUserInfo\n    };\n\n    this.userManager = new UserManager(oidcConfig);\n\n    if(config.mock)\n      this.userSubject.next(config.mock);\n    else \n      this.userManager.getUser().then(user => {\n          if(user?.expired) {\n            user = null;\n          }\n          this.user = user;\n          this.userSubject.next(user?.profile);\n          //console.log(user);\n      });\n  }\n\n  get isLoggedIn(): boolean {\n    if(this.config.mock)\n      return true;\n    //console.log(this.user);\n    return this.user != null && !this.user.expired;\n  }\n\n  get claims(): any {\n    return this.userSubject.getValue();\n  }\n\n  get authorizationHeader(): string {\n    const user = this.user;\n    if(!user) {\n      return '';\n    }\n    return `${user.token_type} ${user.access_token}`;\n  }\n\n  startSignin(): Promise<void> {\n    const snapshot: RouterStateSnapshot = this.router.routerState.snapshot;\n    this.redirectUrl = snapshot.url;\n    return this.userManager.signinRedirect();\n  }\n\n  completeSignin(): Promise<void> {\n    return this.userManager.signinRedirectCallback().then(user => {\n      this.user = user;\n      this.userSubject.next(user?.profile);\n      //console.log(\"Login ok: \" + user + \" redirecting to \" + this.redirectUrl);\n      this.router.navigateByUrl(this.redirectUrl);\n    });\n  }\n\n  startSignout(): Promise<void> {\n    return this.userManager.signoutRedirect();\n  }\n\n  completeSignout(): Promise<void> {\n    return this.userManager.signoutRedirectCallback().then(user => {\n      this.user = null;\n      this.userSubject.next(undefined);\n      //console.log(\"Logout ok redirecting to \" + this.redirectUrl);\n      this.router.navigateByUrl(\"/\");\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Component({\n  template: ``\n})\nexport class LoginCallbackComponent implements OnInit {\n\n  constructor(private authService: OidcAuthService) { }\n\n  ngOnInit(): void {\n    this.authService.completeSignin();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Component({\n  template: ``\n})\nexport class LoginRedirectComponent implements OnInit {\n\n  constructor(private authService: OidcAuthService) { }\n\n  ngOnInit(): void {\n    this.authService.startSignin();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Component({\n  template: ``\n})\nexport class LogoutCallbackComponent implements OnInit {\n\n  constructor(private authService: OidcAuthService) { }\n\n  ngOnInit(): void {\n    this.authService.completeSignout();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Component({\n  template: ``\n})\nexport class LogoutRedirectComponent implements OnInit {\n\n  constructor(private authService: OidcAuthService) { }\n\n  ngOnInit(): void {\n    this.authService.startSignout();\n  }\n\n}\n","/*\n * Public API Surface of utils\n */\n\nexport * from './login-callback.component';\nexport * from './login-redirect.component';\nexport * from './logout-callback.component';\nexport * from './logout-redirect.component';\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Directive({\n  selector: '[authRequireLogin]'\n})\nexport class RequireLoginDirective {\n\n  private profile: any = undefined;\n  private thenRef: TemplateRef<any>|undefined;\n  private elseRef: TemplateRef<any>|undefined;\n\n  constructor(private authService: OidcAuthService,\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef) \n  { \n    this.authService.userSubject\n      .subscribe(profile => {\n        this.profile = profile;\n        this.updateView();\n      });\n  }\n\n  @Input()\n  set authRequireLogin(show: boolean) {\n    this.updateView();\n  }\n\n  @Input()\n  set authRequireLoginElse(ref: TemplateRef<any>) {\n    this.elseRef = ref;\n    this.updateView();\n  }\n\n  @Input()\n  set authRequireLoginThen(ref: TemplateRef<any>) {\n    this.thenRef = ref;\n    this.updateView();\n  }\n\n  updateView() : void {\n    this.viewContainer.clear();\n\n    if (this.profile) {\n      this.viewContainer.createEmbeddedView(\n        !!this.thenRef ? this.thenRef : this.templateRef, {\n        $implicit: this.profile,\n      });\n    } \n    else if (!!this.elseRef) {\n      this.viewContainer.createEmbeddedView(this.elseRef);\n    }\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Directive({\n  selector: '[authRequireOwner]'\n})\nexport class RequireOwnerDirective {\n\n  private profile: any = undefined;\n  private thenRef: TemplateRef<any>|undefined;\n  private elseRef: TemplateRef<any>|undefined;\n  private show: boolean = false;\n\n  constructor(private authService: OidcAuthService,\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef) \n  { \n    this.authService.userSubject\n      .subscribe(profile => {\n        this.profile = profile;\n        this.updateView();\n      });\n  }\n\n  @Input()\n  set authRequireOwner(ownerId: string) {\n    const show = (ownerId.toLowerCase() === this.profile?.sub.toLowerCase());\n    if (show != this.show) {\n      this.show = show;\n      this.updateView();\n    }\n  }\n\n  @Input()\n  set authRequireOwnerElse(ref: TemplateRef<any>) {\n    this.elseRef = ref;\n    this.updateView();\n  }\n\n  @Input()\n  set authRequireOwnerThen(ref: TemplateRef<any>) {\n    this.thenRef = ref;\n    this.updateView();\n  }\n\n  updateView() : void {\n    this.viewContainer.clear();\n\n    if (this.show) {\n      this.viewContainer.createEmbeddedView(\n        !!this.thenRef ? this.thenRef : this.templateRef, { $implicit: this.profile }\n      );\n    } \n    else if (!!this.elseRef) {\n      this.viewContainer.createEmbeddedView(this.elseRef);\n    }\n  }\n\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Directive({\n  selector: '[authRequireRole]'\n})\nexport class RequireRoleDirective {\n\n  private profile: any = undefined;\n  private thenRef: TemplateRef<any>|undefined;\n  private elseRef: TemplateRef<any>|undefined;\n  private show: boolean = false;\n\n  constructor(private authService: OidcAuthService,\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef) \n  { \n    this.authService.userSubject\n      .subscribe(profile => {\n        this.profile = profile;\n        this.updateView();\n      });\n  }\n\n  @Input()\n  set authRequireRole(role: string) {\n    const roles: string[] = this.profile?.roles;\n    const show = !!roles?.find(x => x.toLowerCase() === role.toLowerCase());\n    if (show != this.show) {\n      this.show = show;\n      this.updateView();\n    }\n  }\n\n  @Input()\n  set authRequireRoleElse(ref: TemplateRef<any>) {\n    this.elseRef = ref;\n    this.updateView();\n  }\n\n  @Input()\n  set authRequireRoleThen(ref: TemplateRef<any>) {\n    this.thenRef = ref;\n    this.updateView();\n  }\n\n  updateView() : void {\n    this.viewContainer.clear();\n\n    if (this.show) {\n      this.viewContainer.createEmbeddedView(\n        !!this.thenRef ? this.thenRef : this.templateRef, {\n        $implicit: this.profile,\n      });\n    } \n    else if (!!this.elseRef) {\n      this.viewContainer.createEmbeddedView(this.elseRef);\n    }\n  }\n}\n","/*\n * Public API Surface of utils\n */\n\nexport * from './require-login.directive';\nexport * from './require-owner.directive';\nexport * from './require-role.directive';\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private authService: OidcAuthService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n    : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      if(this.authService.isLoggedIn) {\n        return true;\n      }\n\n      this.router.navigate(['/oidc-auth/login'], { queryParams: { returnUrl: state.url }});\n      return false;\n  }\n  \n}\n","/*\n * Public API Surface of utils\n */\n\nexport * from './auth.guard';\n","/*\n * Public API Surface of utils\n */\n\nexport * from './auth.service';\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginCallbackComponent } from './components/login-callback.component';\nimport { LoginRedirectComponent } from './components/login-redirect.component';\nimport { LogoutCallbackComponent } from './components/logout-callback.component';\nimport { LogoutRedirectComponent } from './components/logout-redirect.component';\n\nconst routes: Routes = [\n  {\n    path: 'oidc-auth/login',\n    component: LoginRedirectComponent\n  },\n  {\n    path: 'oidc-auth/login-callback',\n    component: LoginCallbackComponent\n  },\n  {\n    path: 'oidc-auth/logout',\n    component: LogoutRedirectComponent\n  },\n  {\n    path: 'oidc-auth/logout-callback',\n    component: LogoutCallbackComponent\n  }\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes)],\n  exports: [ RouterModule ]\n})\nexport class AuthRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { OidcAuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: OidcAuthService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n    if(this.authService.isLoggedIn) {\n      //console.log(\"Adding authentication header\");\n      request = request.clone({\n        setHeaders: {\n          Authorization: this.authService.authorizationHeader\n        }\n      });\n    } else {\n      //console.log(\"Not adding authentication header\");\n    }\n\n    return next.handle(request);\n  }\n}\n","import { ModuleWithProviders } from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { AuthGuard } from './guards/auth.guard';\nimport { OidcAuthConfigToken, OidcAuthConfig, OidcAuthService } from './services/auth.service';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { RequireLoginDirective } from './directives/require-login.directive';\nimport { RequireOwnerDirective } from './directives/require-owner.directive';\nimport { RequireRoleDirective } from './directives/require-role.directive';\nimport { LoginRedirectComponent } from './components/login-redirect.component';\nimport { LoginCallbackComponent } from './components/login-callback.component';\nimport { LogoutRedirectComponent } from './components/logout-redirect.component';\nimport { LogoutCallbackComponent } from './components/logout-callback.component';\n\n@NgModule({\n  declarations: [\n    LoginCallbackComponent,\n    LoginRedirectComponent,\n    LogoutCallbackComponent,\n    LogoutRedirectComponent,\n    RequireLoginDirective,\n    RequireOwnerDirective,\n    RequireRoleDirective\n  ],\n  imports: [\n    AuthRoutingModule\n  ],\n  exports: [\n    LoginCallbackComponent,\n    LoginRedirectComponent,\n    LogoutCallbackComponent,\n    LogoutRedirectComponent,\n    RequireLoginDirective,\n    RequireOwnerDirective,\n    RequireRoleDirective\n  ]\n})\nexport class OidcAuthModule { \n  static forRoot(config: OidcAuthConfig): ModuleWithProviders<OidcAuthModule> {\n    return {\n      ngModule: OidcAuthModule,\n      providers: [\n        OidcAuthService,\n        AuthGuard,\n        {\n          provide: OidcAuthConfigToken,\n          useValue: config\n        },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: AuthInterceptor,\n          multi: true\n        }\n      ]\n    }\n  }\n\n  static forChild(): ModuleWithProviders<OidcAuthModule> {\n    return {\n      ngModule: OidcAuthModule,\n    };\n  }\n}\n","/*\n * Public API Surface of auth-oidc\n */\n\nexport * from './lib/components/public-api';\nexport * from './lib/directives/public-api';\nexport * from './lib/guards/public-api';\nexport * from './lib/services/public-api';\nexport * from './lib/auth-oidc.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}