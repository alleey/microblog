{"version":3,"file":"auth-oidc.umd.js","sources":["../../../projects/auth-oidc/src/lib/services/auth.service.ts","../../../projects/auth-oidc/src/lib/components/login-callback.component.ts","../../../projects/auth-oidc/src/lib/components/login-redirect.component.ts","../../../projects/auth-oidc/src/lib/components/logout-callback.component.ts","../../../projects/auth-oidc/src/lib/components/logout-redirect.component.ts","../../../projects/auth-oidc/src/lib/components/public-api.ts","../../../projects/auth-oidc/src/lib/directives/require-login.directive.ts","../../../projects/auth-oidc/src/lib/directives/require-owner.directive.ts","../../../projects/auth-oidc/src/lib/directives/require-role.directive.ts","../../../projects/auth-oidc/src/lib/directives/public-api.ts","../../../projects/auth-oidc/src/lib/guards/auth.guard.ts","../../../projects/auth-oidc/src/lib/guards/public-api.ts","../../../projects/auth-oidc/src/lib/services/public-api.ts","../../../projects/auth-oidc/src/lib/auth-routing.module.ts","../../../projects/auth-oidc/src/lib/interceptors/auth.interceptor.ts","../../../projects/auth-oidc/src/lib/auth-oidc.module.ts","../../../projects/auth-oidc/src/public-api.ts","../../../projects/auth-oidc/src/auth-oidc.ts"],"sourcesContent":["import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Router, RouterStateSnapshot } from '@angular/router';\n\nimport { UserManager, UserManagerSettings, User, Profile } from 'oidc-client';\nimport { BehaviorSubject } from 'rxjs';\n\n\nexport interface OidcAuthConfig {\n  clientId: string,               // client_id\n  filterProtocolClaims?: boolean, // filterProtocolClaims\n  grantType?: string,\n  issuer: string,                 // authority\n  loadUserInfo?: boolean,         // loadUserInfo\n  postLogoutRedirectUri?: string, // post_logout_redirect_uri\n  redirectUri: string,            // redirect_uri\n  responseType: string,           // response_type\n  scope: string,                  // scope\n  mock?: any                       // for testing/development\n}\n\nexport const OidcAuthConfigToken = new InjectionToken<OidcAuthConfig>(\"AuthServiceConfig\");\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OidcAuthService {\n\n  private userManager: UserManager;\n  private user: User | null = null;\n  private redirectUrl!: string;\n\n  public userSubject = new BehaviorSubject<Profile|undefined>(undefined); \n\n  constructor(\n    @Inject(OidcAuthConfigToken) private config: OidcAuthConfig, \n    private router: Router) \n  {\n    const oidcConfig: UserManagerSettings = {\n      authority: this.config.issuer,\n      client_id: this.config.clientId,\n      redirect_uri: this.config.redirectUri,\n      post_logout_redirect_uri: this.config.postLogoutRedirectUri,\n      response_type: this.config.responseType,\n      scope: this.config.scope,\n      filterProtocolClaims: this.config.filterProtocolClaims,\n      loadUserInfo: this.config.loadUserInfo\n    };\n\n    this.userManager = new UserManager(oidcConfig);\n\n    if(config.mock)\n      this.userSubject.next(config.mock);\n    else \n      this.userManager.getUser().then(user => {\n          if(user?.expired) {\n            user = null;\n          }\n          this.user = user;\n          this.userSubject.next(user?.profile);\n          //console.log(user);\n      });\n  }\n\n  get isLoggedIn(): boolean {\n    if(this.config.mock)\n      return true;\n    //console.log(this.user);\n    return this.user != null && !this.user.expired;\n  }\n\n  get claims(): any {\n    return this.userSubject.getValue();\n  }\n\n  get authorizationHeader(): string {\n    const user = this.user;\n    if(!user) {\n      return '';\n    }\n    return `${user.token_type} ${user.access_token}`;\n  }\n\n  startSignin(): Promise<void> {\n    const snapshot: RouterStateSnapshot = this.router.routerState.snapshot;\n    this.redirectUrl = snapshot.url;\n    return this.userManager.signinRedirect();\n  }\n\n  completeSignin(): Promise<void> {\n    return this.userManager.signinRedirectCallback().then(user => {\n      this.user = user;\n      this.userSubject.next(user?.profile);\n      //console.log(\"Login ok: \" + user + \" redirecting to \" + this.redirectUrl);\n      this.router.navigateByUrl(this.redirectUrl);\n    });\n  }\n\n  startSignout(): Promise<void> {\n    return this.userManager.signoutRedirect();\n  }\n\n  completeSignout(): Promise<void> {\n    return this.userManager.signoutRedirectCallback().then(user => {\n      this.user = null;\n      this.userSubject.next(undefined);\n      //console.log(\"Logout ok redirecting to \" + this.redirectUrl);\n      this.router.navigateByUrl(\"/\");\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Component({\n  template: ``\n})\nexport class LoginCallbackComponent implements OnInit {\n\n  constructor(private authService: OidcAuthService) { }\n\n  ngOnInit(): void {\n    this.authService.completeSignin();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Component({\n  template: ``\n})\nexport class LoginRedirectComponent implements OnInit {\n\n  constructor(private authService: OidcAuthService) { }\n\n  ngOnInit(): void {\n    this.authService.startSignin();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Component({\n  template: ``\n})\nexport class LogoutCallbackComponent implements OnInit {\n\n  constructor(private authService: OidcAuthService) { }\n\n  ngOnInit(): void {\n    this.authService.completeSignout();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Component({\n  template: ``\n})\nexport class LogoutRedirectComponent implements OnInit {\n\n  constructor(private authService: OidcAuthService) { }\n\n  ngOnInit(): void {\n    this.authService.startSignout();\n  }\n\n}\n","/*\n * Public API Surface of utils\n */\n\nexport * from './login-callback.component';\nexport * from './login-redirect.component';\nexport * from './logout-callback.component';\nexport * from './logout-redirect.component';\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Directive({\n  selector: '[authRequireLogin]'\n})\nexport class RequireLoginDirective {\n\n  private profile: any = undefined;\n  private thenRef: TemplateRef<any>|undefined;\n  private elseRef: TemplateRef<any>|undefined;\n\n  constructor(private authService: OidcAuthService,\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef) \n  { \n    this.authService.userSubject\n      .subscribe(profile => {\n        this.profile = profile;\n        this.updateView();\n      });\n  }\n\n  @Input()\n  set authRequireLogin(show: boolean) {\n    this.updateView();\n  }\n\n  @Input()\n  set authRequireLoginElse(ref: TemplateRef<any>) {\n    this.elseRef = ref;\n    this.updateView();\n  }\n\n  @Input()\n  set authRequireLoginThen(ref: TemplateRef<any>) {\n    this.thenRef = ref;\n    this.updateView();\n  }\n\n  updateView() : void {\n    this.viewContainer.clear();\n\n    if (this.profile) {\n      this.viewContainer.createEmbeddedView(\n        !!this.thenRef ? this.thenRef : this.templateRef, {\n        $implicit: this.profile,\n      });\n    } \n    else if (!!this.elseRef) {\n      this.viewContainer.createEmbeddedView(this.elseRef);\n    }\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Directive({\n  selector: '[authRequireOwner]'\n})\nexport class RequireOwnerDirective {\n\n  private profile: any = undefined;\n  private thenRef: TemplateRef<any>|undefined;\n  private elseRef: TemplateRef<any>|undefined;\n  private show: boolean = false;\n\n  constructor(private authService: OidcAuthService,\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef) \n  { \n    this.authService.userSubject\n      .subscribe(profile => {\n        this.profile = profile;\n        this.updateView();\n      });\n  }\n\n  @Input()\n  set authRequireOwner(ownerId: string) {\n    const show = (ownerId.toLowerCase() === this.profile?.sub.toLowerCase());\n    if (show != this.show) {\n      this.show = show;\n      this.updateView();\n    }\n  }\n\n  @Input()\n  set authRequireOwnerElse(ref: TemplateRef<any>) {\n    this.elseRef = ref;\n    this.updateView();\n  }\n\n  @Input()\n  set authRequireOwnerThen(ref: TemplateRef<any>) {\n    this.thenRef = ref;\n    this.updateView();\n  }\n\n  updateView() : void {\n    this.viewContainer.clear();\n\n    if (this.show) {\n      this.viewContainer.createEmbeddedView(\n        !!this.thenRef ? this.thenRef : this.templateRef, { $implicit: this.profile }\n      );\n    } \n    else if (!!this.elseRef) {\n      this.viewContainer.createEmbeddedView(this.elseRef);\n    }\n  }\n\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Directive({\n  selector: '[authRequireRole]'\n})\nexport class RequireRoleDirective {\n\n  private profile: any = undefined;\n  private thenRef: TemplateRef<any>|undefined;\n  private elseRef: TemplateRef<any>|undefined;\n  private show: boolean = false;\n\n  constructor(private authService: OidcAuthService,\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef) \n  { \n    this.authService.userSubject\n      .subscribe(profile => {\n        this.profile = profile;\n        this.updateView();\n      });\n  }\n\n  @Input()\n  set authRequireRole(role: string) {\n    const roles: string[] = this.profile?.roles;\n    const show = !!roles?.find(x => x.toLowerCase() === role.toLowerCase());\n    if (show != this.show) {\n      this.show = show;\n      this.updateView();\n    }\n  }\n\n  @Input()\n  set authRequireRoleElse(ref: TemplateRef<any>) {\n    this.elseRef = ref;\n    this.updateView();\n  }\n\n  @Input()\n  set authRequireRoleThen(ref: TemplateRef<any>) {\n    this.thenRef = ref;\n    this.updateView();\n  }\n\n  updateView() : void {\n    this.viewContainer.clear();\n\n    if (this.show) {\n      this.viewContainer.createEmbeddedView(\n        !!this.thenRef ? this.thenRef : this.templateRef, {\n        $implicit: this.profile,\n      });\n    } \n    else if (!!this.elseRef) {\n      this.viewContainer.createEmbeddedView(this.elseRef);\n    }\n  }\n}\n","/*\n * Public API Surface of utils\n */\n\nexport * from './require-login.directive';\nexport * from './require-owner.directive';\nexport * from './require-role.directive';\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { OidcAuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private authService: OidcAuthService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n    : Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      if(this.authService.isLoggedIn) {\n        return true;\n      }\n\n      this.router.navigate(['/oidc-auth/login'], { queryParams: { returnUrl: state.url }});\n      return false;\n  }\n  \n}\n","/*\n * Public API Surface of utils\n */\n\nexport * from './auth.guard';\n","/*\n * Public API Surface of utils\n */\n\nexport * from './auth.service';\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginCallbackComponent } from './components/login-callback.component';\nimport { LoginRedirectComponent } from './components/login-redirect.component';\nimport { LogoutCallbackComponent } from './components/logout-callback.component';\nimport { LogoutRedirectComponent } from './components/logout-redirect.component';\n\nconst routes: Routes = [\n  {\n    path: 'oidc-auth/login',\n    component: LoginRedirectComponent\n  },\n  {\n    path: 'oidc-auth/login-callback',\n    component: LoginCallbackComponent\n  },\n  {\n    path: 'oidc-auth/logout',\n    component: LogoutRedirectComponent\n  },\n  {\n    path: 'oidc-auth/logout-callback',\n    component: LogoutCallbackComponent\n  }\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes)],\n  exports: [ RouterModule ]\n})\nexport class AuthRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { OidcAuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: OidcAuthService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n    if(this.authService.isLoggedIn) {\n      //console.log(\"Adding authentication header\");\n      request = request.clone({\n        setHeaders: {\n          Authorization: this.authService.authorizationHeader\n        }\n      });\n    } else {\n      //console.log(\"Not adding authentication header\");\n    }\n\n    return next.handle(request);\n  }\n}\n","import { ModuleWithProviders } from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { AuthGuard } from './guards/auth.guard';\nimport { OidcAuthConfigToken, OidcAuthConfig, OidcAuthService } from './services/auth.service';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { RequireLoginDirective } from './directives/require-login.directive';\nimport { RequireOwnerDirective } from './directives/require-owner.directive';\nimport { RequireRoleDirective } from './directives/require-role.directive';\nimport { LoginRedirectComponent } from './components/login-redirect.component';\nimport { LoginCallbackComponent } from './components/login-callback.component';\nimport { LogoutRedirectComponent } from './components/logout-redirect.component';\nimport { LogoutCallbackComponent } from './components/logout-callback.component';\n\n@NgModule({\n  declarations: [\n    LoginCallbackComponent,\n    LoginRedirectComponent,\n    LogoutCallbackComponent,\n    LogoutRedirectComponent,\n    RequireLoginDirective,\n    RequireOwnerDirective,\n    RequireRoleDirective\n  ],\n  imports: [\n    AuthRoutingModule\n  ],\n  exports: [\n    LoginCallbackComponent,\n    LoginRedirectComponent,\n    LogoutCallbackComponent,\n    LogoutRedirectComponent,\n    RequireLoginDirective,\n    RequireOwnerDirective,\n    RequireRoleDirective\n  ]\n})\nexport class OidcAuthModule { \n  static forRoot(config: OidcAuthConfig): ModuleWithProviders<OidcAuthModule> {\n    return {\n      ngModule: OidcAuthModule,\n      providers: [\n        OidcAuthService,\n        AuthGuard,\n        {\n          provide: OidcAuthConfigToken,\n          useValue: config\n        },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: AuthInterceptor,\n          multi: true\n        }\n      ]\n    }\n  }\n\n  static forChild(): ModuleWithProviders<OidcAuthModule> {\n    return {\n      ngModule: OidcAuthModule,\n    };\n  }\n}\n","/*\n * Public API Surface of auth-oidc\n */\n\nexport * from './lib/components/public-api';\nexport * from './lib/directives/public-api';\nexport * from './lib/guards/public-api';\nexport * from './lib/services/public-api';\nexport * from './lib/auth-oidc.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["InjectionToken","BehaviorSubject","UserManager","Injectable","Inject","Component","Directive","Input","RouterModule","NgModule","HTTP_INTERCEPTORS"],"mappings":"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"}