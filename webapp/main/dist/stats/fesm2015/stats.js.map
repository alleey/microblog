{"version":3,"file":"stats.js","sources":["../../../projects/stats/src/lib/config/config.ts","../../../projects/stats/src/lib/config/public-api.ts","../../../projects/stats/src/lib/models/public-api.ts","../../../projects/stats/src/lib/services/counters.service.ts","../../../projects/stats/src/lib/services/public-api.ts","../../../projects/stats/src/lib/stats.module.ts","../../../projects/stats/src/public-api.ts","../../../projects/stats/src/stats.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface CountersServiceConfig {\n  serviceBaseUrl: string,\n  defaultEndpoint: string,\n}\nexport const CountersServiceConfigToken = new InjectionToken<CountersServiceConfig>(\"CountersServiceConfig\");\n\nexport interface StatsModuleConfig {\n  counters: CountersServiceConfig\n}\nexport const StatsModuleConfigToken = new InjectionToken<StatsModuleConfig>(\"StatsModuleConfig\");\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './config';\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './counter';\nexport * from './counter-statistics';\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { CountersServiceConfig, CountersServiceConfigToken } from '../config/config';\nimport { CounterListResponseModel } from '../models/counter';\nimport { CounterStatisticsModel } from '../models/counter-statistics';\n\nexport interface CounterRequest {\n  counter: string;\n  value: Number;\n};\nexport interface BatchCounterRequest extends CounterRequest {\n  operation: string;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountersService {\n\n  public onChange: Subject<any> = new Subject<any>();\n\n  constructor(\n    @Inject(CountersServiceConfigToken) \n    private config: CountersServiceConfig,\n    private httpClient: HttpClient) \n  { }\n\n\tgetCounterStatistics(endpoint: string, counter: string): Observable<CounterStatisticsModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n            .get<CounterStatisticsModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${counter}`)\n            .pipe(\n              map(data => {\n                return data as CounterStatisticsModel;\n              })\n            );\n  }\n\n\tbatchUpdate(endpoint: string, counters: BatchCounterRequest[]): Observable<CounterListResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n            .post<CounterListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/batch`, counters)\n            .pipe(\n              map(data => {\n                return data as CounterListResponseModel;\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n\n\tdeleteCounter(endpoint: string, counter: string): Observable<void> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n            .delete<void>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${counter}`)\n            .pipe(\n              catchError((error: any) => {\n                return throwError(new Error(error.status));\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n}\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './counters.service';\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { OidcAuthModule } from 'auth-oidc';\nimport { UtilsModule } from 'utils';\nimport { CountersServiceConfigToken, StatsModuleConfig } from './config/config';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n    OidcAuthModule.forChild(),\n    UtilsModule\n  ],\n  exports: [\n  ]\n})\nexport class StatsModule {\n\n  static forRoot(config: StatsModuleConfig): ModuleWithProviders<StatsModule> {\n    return {\n      ngModule: StatsModule,\n      providers: [\n        {\n          provide: CountersServiceConfigToken,\n          useValue: config.counters\n        }\n      ]\n    }\n  }\n\n }\n","/*\n * Public API Surface of stats\n */\n\nexport * from './lib/config/public-api';\nexport * from './lib/models/public-api';\n// export * from './lib/components/public-api';\nexport * from './lib/services/public-api';\nexport * from './lib/stats.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;MAMa,0BAA0B,GAAG,IAAI,cAAc,CAAwB,uBAAuB,EAAE;MAKhG,sBAAsB,GAAG,IAAI,cAAc,CAAoB,mBAAmB;;ACX/F;;;;ACAA;;;;ACWC,CAAC;AAGD,CAAC;MAKW,eAAe;IAI1B,YAEU,MAA6B,EAC7B,UAAsB;QADtB,WAAM,GAAN,MAAM,CAAuB;QAC7B,eAAU,GAAV,UAAU,CAAY;QALzB,aAAQ,GAAiB,IAAI,OAAO,EAAO,CAAC;KAMhD;IAEJ,oBAAoB,CAAC,QAAgB,EAAE,OAAe;QACnD,MAAM,WAAW,GAAG,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QACtE,OAAO,IAAI,CAAC,UAAU;aACb,GAAG,CAAyB,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,WAAW,IAAI,OAAO,EAAE,CAAC;aACtF,IAAI,CACH,GAAG,CAAC,IAAI;YACN,OAAO,IAA8B,CAAC;SACvC,CAAC,CACH,CAAC;KACX;IAEF,WAAW,CAAC,QAAgB,EAAE,QAA+B;QAC1D,MAAM,WAAW,GAAG,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QACtE,OAAO,IAAI,CAAC,UAAU;aACb,IAAI,CAA2B,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,WAAW,QAAQ,EAAE,QAAQ,CAAC;aAC9F,IAAI,CACH,GAAG,CAAC,IAAI;YACN,OAAO,IAAgC,CAAC;SACzC,CAAC,EACF,GAAG,CAAC;YACF,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;SACtC,CAAC,CACH,CAAC;KACX;IAEF,aAAa,CAAC,QAAgB,EAAE,OAAe;QAC5C,MAAM,WAAW,GAAG,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QACtE,OAAO,IAAI,CAAC,UAAU;aACb,MAAM,CAAO,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,WAAW,IAAI,OAAO,EAAE,CAAC;aACvE,IAAI,CACH,UAAU,CAAC,CAAC,KAAU;YACpB,OAAO,UAAU,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;SAC5C,CAAC,EACF,GAAG,CAAC;YACF,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;SACtC,CAAC,CACH,CAAC;KACX;;4GA/CU,eAAe,kBAKhB,0BAA0B;gHALzB,eAAe,cAFd,MAAM;2FAEP,eAAe;kBAH3B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAMI,MAAM;2BAAC,0BAA0B;;;ACxBtC;;;;MCiBa,WAAW;IAEtB,OAAO,OAAO,CAAC,MAAyB;QACtC,OAAO;YACL,QAAQ,EAAE,WAAW;YACrB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,0BAA0B;oBACnC,QAAQ,EAAE,MAAM,CAAC,QAAQ;iBAC1B;aACF;SACF,CAAA;KACF;;wGAZU,WAAW;yGAAX,WAAW,YAPpB,YAAY,uBAEZ,WAAW;yGAKF,WAAW,YARb;YACP,YAAY;YACZ,cAAc,CAAC,QAAQ,EAAE;YACzB,WAAW;SACZ;2FAIU,WAAW;kBAXvB,QAAQ;mBAAC;oBACR,YAAY,EAAE,EACb;oBACD,OAAO,EAAE;wBACP,YAAY;wBACZ,cAAc,CAAC,QAAQ,EAAE;wBACzB,WAAW;qBACZ;oBACD,OAAO,EAAE,EACR;iBACF;;;AChBD;;;;ACAA;;;;;;"}