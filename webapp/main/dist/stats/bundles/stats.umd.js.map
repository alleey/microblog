{"version":3,"file":"stats.umd.js","sources":["../../../projects/stats/src/lib/config/config.ts","../../../projects/stats/src/lib/config/public-api.ts","../../../projects/stats/src/lib/models/public-api.ts","../../../projects/stats/src/lib/services/counters.service.ts","../../../projects/stats/src/lib/services/public-api.ts","../../../projects/stats/src/lib/stats.module.ts","../../../projects/stats/src/public-api.ts","../../../projects/stats/src/stats.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface CountersServiceConfig {\n  serviceBaseUrl: string,\n  defaultEndpoint: string,\n}\nexport const CountersServiceConfigToken = new InjectionToken<CountersServiceConfig>(\"CountersServiceConfig\");\n\nexport interface StatsModuleConfig {\n  counters: CountersServiceConfig\n}\nexport const StatsModuleConfigToken = new InjectionToken<StatsModuleConfig>(\"StatsModuleConfig\");\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './config';\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './counter';\nexport * from './counter-statistics';\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { CountersServiceConfig, CountersServiceConfigToken } from '../config/config';\nimport { CounterListResponseModel } from '../models/counter';\nimport { CounterStatisticsModel } from '../models/counter-statistics';\n\nexport interface CounterRequest {\n  counter: string;\n  value: Number;\n};\nexport interface BatchCounterRequest extends CounterRequest {\n  operation: string;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountersService {\n\n  public onChange: Subject<any> = new Subject<any>();\n\n  constructor(\n    @Inject(CountersServiceConfigToken) \n    private config: CountersServiceConfig,\n    private httpClient: HttpClient) \n  { }\n\n\tgetCounterStatistics(endpoint: string, counter: string): Observable<CounterStatisticsModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n            .get<CounterStatisticsModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${counter}`)\n            .pipe(\n              map(data => {\n                return data as CounterStatisticsModel;\n              })\n            );\n  }\n\n\tbatchUpdate(endpoint: string, counters: BatchCounterRequest[]): Observable<CounterListResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n            .post<CounterListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/batch`, counters)\n            .pipe(\n              map(data => {\n                return data as CounterListResponseModel;\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n\n\tdeleteCounter(endpoint: string, counter: string): Observable<void> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n            .delete<void>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${counter}`)\n            .pipe(\n              catchError((error: any) => {\n                return throwError(new Error(error.status));\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n}\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './counters.service';\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { OidcAuthModule } from 'auth-oidc';\nimport { UtilsModule } from 'utils';\nimport { CountersServiceConfigToken, StatsModuleConfig } from './config/config';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n    OidcAuthModule.forChild(),\n    UtilsModule\n  ],\n  exports: [\n  ]\n})\nexport class StatsModule {\n\n  static forRoot(config: StatsModuleConfig): ModuleWithProviders<StatsModule> {\n    return {\n      ngModule: StatsModule,\n      providers: [\n        {\n          provide: CountersServiceConfigToken,\n          useValue: config.counters\n        }\n      ]\n    }\n  }\n\n }\n","/*\n * Public API Surface of stats\n */\n\nexport * from './lib/config/public-api';\nexport * from './lib/models/public-api';\n// export * from './lib/components/public-api';\nexport * from './lib/services/public-api';\nexport * from './lib/stats.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["InjectionToken","Subject","map","tap","catchError","throwError","Injectable","Inject","CommonModule","UtilsModule","OidcAuthModule","NgModule"],"mappings":"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"}