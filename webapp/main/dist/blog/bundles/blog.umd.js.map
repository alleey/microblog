{"version":3,"file":"blog.umd.js","sources":["../../../projects/blog/src/lib/config/config.ts","../../../projects/blog/src/lib/config/public-api.ts","../../../projects/blog/src/lib/models/public-api.ts","../../../projects/blog/src/lib/services/posts.service.ts","../../../projects/blog/src/lib/components/topic-list-view/topic-list-view.component.ts","../../../projects/blog/src/lib/components/topic-list-view/topic-list-view.component.html","../../../projects/blog/src/lib/services/comments.service.ts","../../../projects/blog/src/lib/components/comment-editor/comment-editor.component.ts","../../../projects/blog/src/lib/components/comment-editor/comment-editor.component.html","../../../projects/blog/src/lib/components/comment-list-view/comment-list-view.component.ts","../../../projects/blog/src/lib/components/comment-list-view/comment-list-view.component.html","../../../projects/blog/src/lib/components/comment-list/comment-list.component.ts","../../../projects/blog/src/lib/components/comment-list/comment-list.component.html","../../../projects/blog/src/lib/components/blog-post-view/blog-post-view.component.ts","../../../projects/blog/src/lib/components/blog-post-view/blog-post-view.component.html","../../../projects/blog/src/lib/components/blog-post/blog-post.component.ts","../../../projects/blog/src/lib/components/blog-post/blog-post.component.html","../../../projects/blog/src/lib/validators/unique-slug-validator.directive.ts","../../../projects/blog/src/lib/services/topics.service.ts","../../../projects/blog/src/lib/components/topic-list/topic-list.component.ts","../../../projects/blog/src/lib/components/topic-list/topic-list.component.html","../../../projects/blog/src/lib/components/topic-selector/topic-selector.component.ts","../../../projects/blog/src/lib/components/topic-selector/topic-selector.component.html","../../../projects/blog/src/lib/components/topic-editor/topic-editor.component.ts","../../../projects/blog/src/lib/components/topic-editor/topic-editor.component.html","../../../projects/blog/src/lib/components/blog-post-editor/blog-post-editor.component.ts","../../../projects/blog/src/lib/components/blog-post-editor/blog-post-editor.component.html","../../../projects/blog/src/lib/components/blog-post-list-view/blog-post-list-view.component.ts","../../../projects/blog/src/lib/components/blog-post-list-view/blog-post-list-view.component.html","../../../projects/blog/src/lib/components/blog-post-list/blog-post-list.component.ts","../../../projects/blog/src/lib/components/blog-post-list/blog-post-list.component.html","../../../projects/blog/src/lib/components/public-api.ts","../../../projects/blog/src/lib/services/public-api.ts","../../../projects/blog/src/lib/blog.module.ts","../../../projects/blog/src/public-api.ts","../../../projects/blog/src/blog.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface PostsServiceConfig {\n  serviceBaseUrl: string,\n  defaultEndpoint: string,\n  pageSize: number,\n  maxTitleLength: number,\n  maxContentLength: number,\n}\nexport const PostsServiceConfigToken = new InjectionToken<PostsServiceConfig>(\"PostsServiceConfig\");\n\nexport interface CommentsServiceConfig {\n  serviceBaseUrl: string,\n  defaultEndpoint: string,\n  pageSize: number,\n  maxContentLength: number,\n};\nexport const CommentsServiceConfigToken = new InjectionToken<CommentsServiceConfig>(\"CommentsServiceConfig\");\n\nexport interface TopicsServiceConfig {\n  serviceBaseUrl: string,\n  defaultEndpoint: string,\n  pageSize: number,\n};\nexport const TopicsServiceConfigToken = new InjectionToken<TopicsServiceConfig>(\"TopicsServiceConfig\");\n\nexport interface BlogModuleConfig {\n  posts: PostsServiceConfig;\n  comments: CommentsServiceConfig;\n  topics: TopicsServiceConfig;\n}\nexport const BlogModuleConfigToken = new InjectionToken<BlogModuleConfig>(\"BlogModuleConfig\");\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './config';\n","/*\n * Public API Surface of blog\n */\n\nexport * from './blog-post';\nexport * from './topic';\nexport * from './comment';\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Pageable } from 'utils';\nimport { Observable, of, Subject, throwError } from 'rxjs';\nimport { catchError, map, tap } from \"rxjs/operators\";\nimport { BlogPostResponseModel, BlogPostListResponseModel } from '../models/blog-post';\nimport { PostsServiceConfig, PostsServiceConfigToken } from '../config/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  public onChange: Subject<any> = new Subject<any>();\n\n  constructor(@Inject(PostsServiceConfigToken) private config: PostsServiceConfig, private httpClient: HttpClient) \n  { }\n\n  public all(endpoint: string, pageable?: Pageable): Observable<BlogPostListResponseModel> {\n\n    const page: number = pageable ? pageable.page : 0;\n    const pageSize: number = (pageable && pageable.limit) ? pageable.limit : this.config.pageSize;\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n\n    return this.httpClient\n              .get<BlogPostListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}`, {\n                params: {\n                  \"page\": page.toString(),\n                  \"size\": pageSize.toString(),\n                  \"sort\": \"createdOn,desc\"\n                }\n              })\n              .pipe(\n                map(data => {\n                  return data as BlogPostListResponseModel;\n                })\n              );\n  }\n\n  public one(endpoint: string, id: number): Observable<BlogPostResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n              .get<BlogPostResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${id}`)\n              .pipe(\n                map(data => {\n                  return data as BlogPostResponseModel;\n                })\n              );\n  }\n\n  public findBySlug(endpoint: string, slug: string): Observable<BlogPostListResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    const query = {\n      \"conditions\": [\n        { \"attribute\": \"slug\", \"operator\": \"eq\", \"value\": slug }\n      ]\n    };\n    return this.httpClient\n            .get<BlogPostListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/search`, \n            {\n              \"params\": { \"q\": JSON.stringify(query) }\n            })\n            .pipe(\n              map(data => {\n                return data as BlogPostListResponseModel;\n              })\n            );\n  }\n\n  public create(endpoint: string, slug: string, title: string, text: string): Observable<BlogPostResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    let postRepr = {\n      \"slug\": slug, \"title\": title, \"text\": text\n    };\n    return this.httpClient\n            .post<BlogPostResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}`, postRepr)\n            .pipe(\n              map(data => {\n                return data as BlogPostResponseModel;\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n\n  public update(endpoint: string, id: number, slug: string, title: string, text: string): Observable<BlogPostResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    let postRepr = {\n      \"slug\": slug, \"title\": title, \"text\": text\n    };\n    return this.httpClient\n            .put<BlogPostResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${id}`, postRepr)\n            .pipe(\n              map(data => {\n                return data as BlogPostResponseModel;\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n\n  public delete(endpoint: string, id: number): Observable<void> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n            .delete<void>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${id}`)\n            .pipe(\n              catchError((error: any) => {\n                return throwError(new Error(error.status));\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n\n\n  public assignTopics(endpoint: string, id: number, topicIds: number[]): Observable<void> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n            .put<void>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${id}/topics`, topicIds)\n            .pipe(\n              catchError((error: any) => {\n                return throwError(new Error(error.status));\n              })\n            );\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter, ContentChild, TemplateRef } from '@angular/core';\nimport { ViewEvent } from 'utils';\nimport { TopicModel } from '../../models/topic';\n\nexport type TopicListViewEvent = ViewEvent<TopicModel>;\n\n@Component({\n  selector: 'blog-topic-list-view',\n  templateUrl: './topic-list-view.component.html',\n  styleUrls: ['./topic-list-view.component.scss']\n})\nexport class TopicListViewComponent implements OnInit {\n\n  @Input() topics!: TopicModel[];\n\n  @Input() itemTemplate: TemplateRef<any> | undefined;\n  @Input() noContentsTemplate: TemplateRef<any> | undefined;\n\n  @Output()\n  onSelectItem = new EventEmitter<TopicListViewEvent>();\n\n  ngOnInit(): void {}\n\n  selectItem(item: TopicModel, opcode: string): void {\n    this.onSelectItem.emit({\n      opcode: opcode,\n      item: item\n    });\n  }\n}\n","<ng-container *ngIf=\"topics\">\n    <ng-container *ngFor=\"let x of topics; index as i\">\n        <ng-container \n            [ngTemplateOutlet]=\"itemTemplate || defaultItemTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: x, index: i, list: this }\">\n        </ng-container>\n    </ng-container>\n</ng-container>\n<ng-container *ngIf=\"!topics\">\n    <ng-container \n        [ngTemplateOutlet]=\"noContentsTemplate || defaultNoContentsTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n</ng-container>\n\n<ng-template #defaultItemTemplate let-item let-parent=\"list\">\n    <a class=\"btn btn-danger m-1\" role=\"button\" (click)=\"parent.selectItem(item, 'select')\">{{item.caption}}</a>\n</ng-template>\n\n<ng-template #defaultNoContentsTemplate let-item>\n    No topic found!\n</ng-template>","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Pageable } from 'utils';\nimport { Observable, of, Subject, throwError } from 'rxjs';\nimport { catchError, map, tap } from \"rxjs/operators\";\nimport { CommentResponseModel, CommentListResponseModel } from '../models/comment';\nimport { CommentsServiceConfig, CommentsServiceConfigToken } from '../config/config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsService {\n\n  public onChange: Subject<any> = new Subject<any>();\n\n  constructor(@Inject(CommentsServiceConfigToken) private config: CommentsServiceConfig, private httpClient: HttpClient) \n  { }\n\n  public all(endpoint: string, postId: number, pageable?: Pageable): Observable<CommentListResponseModel> {\n\n    const page: number = pageable ? pageable.page : 0;\n    const pageSize: number = (pageable && pageable.limit) ? pageable.limit : this.config.pageSize;\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n\n    return this.httpClient\n              .get<CommentListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${postId}/comments`, {\n                params: {\n                  \"page\": page.toString(),\n                  \"size\": pageSize.toString(),\n                  \"sort\": \"createdOn,desc\"\n                }\n              })\n              .pipe(\n                map(data => {\n                  return data as CommentListResponseModel;\n                })\n              );\n  }\n\n  public one(endpoint: string, postId: number, id: number): Observable<CommentResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n              .get<CommentResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${postId}/comments/${id}`)\n              .pipe(\n                map(data => {\n                  return data as CommentResponseModel;\n                })\n              );\n  }\n\n  public create(endpoint: string, postId: number, text: string): Observable<CommentResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    let commentRepr = {\n      \"text\": text\n    };\n    return this.httpClient\n            .post<CommentResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${postId}/comments`, commentRepr)\n            .pipe(\n              map(data => {\n                return data as CommentResponseModel;\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n\n  public update(endpoint: string, postId: number, id: number, text: string): Observable<CommentResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    let commentRepr = {\n      \"text\": text\n    };\n    return this.httpClient\n            .put<CommentResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${postId}/comments/${id}`, commentRepr)\n            .pipe(\n              map(data => {\n                return data as CommentResponseModel;\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n\n  public delete(endpoint: string, postId: number, id: number): Observable<void> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n            .delete<void>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${postId}/comments/${id}`)\n            .pipe(\n              catchError((error: any) => {\n                return throwError(new Error(error.status));\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n}\n","import { Location } from '@angular/common';\nimport { Component, Inject, Input, OnInit, TemplateRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommentsServiceConfig, CommentsServiceConfigToken } from '../../config/config';\nimport { CommentModel, CommentResponseModel } from '../../models/comment';\nimport { CommentsService } from '../../services/comments.service';\n\n@Component({\n  selector: 'comment-editor',\n  templateUrl: './comment-editor.component.html',\n  styleUrls: ['./comment-editor.component.css']\n})\nexport class CommentEditorComponent implements OnInit {\n\n  @Input() headerTemplate: TemplateRef<any> | undefined;\n  @Input(\"postId\") paramPostId?: number;\n  @Input(\"commentId\") paramCommentId?: string;\n  @Input() updateMode: boolean = true;\n\n  postId?: number;\n  commentId?: number;\n  comment : CommentModel|null = null;\n\n  successDesc: any = \"\";\n  errorDesc: any = \"\";\n  loading: boolean = false;\n\n  form!: FormGroup;\n\n  constructor(\n    @Inject(CommentsServiceConfigToken) private config: CommentsServiceConfig,\n    private commentsService: CommentsService, \n    private location: Location,\n    private activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n\n    this.form = new FormGroup(\n    {\n      \"text\": new FormControl(\"\", [\n          Validators.required,\n          Validators.maxLength(this.config.maxContentLength)\n      ]),\n    });\n\n    this.activatedRoute.params.subscribe(params => {\n      this.postId = params.postId ?? this.paramPostId;\n      this.commentId = params.commentId ?? this.paramCommentId;\n      if(this.isUpdateMode)\n        this.fetchComment(this.commentId!);\n    });\n  }\n\n  get isUpdateMode(): boolean { \n    return this.updateMode && this.commentId !== undefined; \n  }\n\n  get text() { return this.form.get('text'); }\n\n  set blogComment(item: CommentModel) {\n    this.comment = this.updateMode ? item : null;\n    this.commentId = this.updateMode ? this.comment?.id : undefined;\n    console.info(\"Got comment id: \" + this.commentId!);\n  }\n\n  updateForm(): void {\n    this.text!.setValue (this.comment?.text);\n  }\n\n  fetchResponseHandler = {\n    next: (result: CommentResponseModel) => {\n      this.blogComment = result;\n      this.updateForm();\n      this.loading = false;\n    },\n    error: (err: any) => {\n      this.errorDesc = err.message;\n      this.loading = false;\n      return false;\n    }\n  };\n\n  fetchComment(commentId: number): void {\n    this.loading = true;\n    this.commentsService\n      .one(\"\", this.postId!, commentId)\n      .subscribe(this.fetchResponseHandler);\n  }      \n\n  createNewComment(): void {\n    this.commentsService\n      .create(\"\", this.postId!, this.text?.value)\n      .subscribe(this.fetchResponseHandler);\n  }\n\n  updateComment(): void {\n    this.commentsService\n      .update(\"\", this.postId!, this.commentId!, this.text?.value)\n      .subscribe(this.fetchResponseHandler);\n  }\n\n  cancel(): void {\n    this.location.back();\n  }\n}\n","<div *ngIf=\"loading; else contents\">\n    <utils-loader></utils-loader>\n</div>\n\n<ng-template #defaultTitleTemplate let-item>\n    <div class=\"d-flex justify-content-between\">\n        <div>\n            <h5>POST A COMMENT</h5>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #contents>\n    <ng-container \n        [ngTemplateOutlet]=\"headerTemplate || defaultTitleTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n    <utils-alert *ngIf=\"successDesc\" [dismissable]=\"false\" [minimal]=\"false\">\n        <p>{{ successDesc }}</p>\n    </utils-alert>\n    <utils-alert *ngIf=\"errorDesc; else editor\" [dismissable]=\"false\" [minimal]=\"false\">\n        <p>An error occurred accessing the post: {{ errorDesc }}</p>\n    </utils-alert>\n</ng-template>\n\n<ng-template #editor>\n    <form [formGroup]=\"form\" novalidate onSubmit=\"return false;\">\n        <div class=\"row\">\n            <div class=\"mb-3 col-sm-12\">\n                <textarea class=\"form-control\" id=\"postText\" rows=\"3\" formControlName=\"text\" required></textarea>\n                <div *ngIf=\"text?.invalid && (text?.dirty || text?.touched)\">\n                    <utils-alert *ngIf=\"text?.errors?.pattern\" [dismissable]=\"false\" [minimal]=\"true\">\n                        Sorry, cannot leave this empty!\n                    </utils-alert>\n                </div>\n            </div>\n        </div>\n        <div class=\"mb-3\" *ngIf=\"!isUpdateMode\">\n            <input class=\"btn btn-primary\" type=\"button\" [disabled]=\"loading || !form.valid\" value=\"Post\" (click)=\"createNewComment()\">\n        </div>\n        <div class=\"mb-3\" *ngIf=\"isUpdateMode\">\n            <input class=\"btn btn-primary\" type=\"button\" [disabled]=\"loading || !form.valid\" value=\"Update\" (click)=\"updateComment()\">\n        </div>\n    </form>\n</ng-template>\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { CommentModel } from '../../models/comment';\n\n@Component({\n  selector: 'comment-list-view',\n  templateUrl: './comment-list-view.component.html',\n  styleUrls: ['./comment-list-view.component.css']\n})\nexport class CommentListViewComponent implements OnInit {\n\n  @Input() comments!: CommentModel[];\n\n  @Input() itemTemplate: TemplateRef<any> | undefined;\n  @Input() noContentsTemplate: TemplateRef<any> | undefined;\n\n  @Output() onSelectItem = new EventEmitter<CommentModel>();\n\n  ngOnInit(): void {}\n\n  selectItem(entity: CommentModel): void {\n    this.onSelectItem.emit(entity);\n  }\n}\n","<ng-container *ngIf=\"comments\">\n    <div *ngFor=\"let x of comments\" class=\"bg-light\">\n        <ng-container \n            [ngTemplateOutlet]=\"itemTemplate || defaultItemTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: x, list: this }\">\n        </ng-container>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"!comments\">\n    <ng-container \n        [ngTemplateOutlet]=\"noContentsTemplate || defaultNoContentsTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n</ng-container>\n\n<ng-template #defaultItemTemplate let-item>\n    <div class=\"created\"> {{item.owner}} commented on {{ item.createdOn | prettyDate }}.</div>\n    <p class=\"posttext \">\n      {{item.text}} \n    </p>\n    <hr class=\"my-4\">\n</ng-template>\n\n<ng-template #defaultNoContentsTemplate let-item>\n    No comments yet!\n</ng-template>\n","import { Component, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Pageable, PageModel } from 'utils';\nimport { CommentModel, CommentListResponseModel } from '../../models/comment';\nimport { CommentsService } from '../../services/comments.service';\n\n@Component({\n  selector: 'blog-comment-list',\n  templateUrl: './comment-list.component.html',\n  styleUrls: ['./comment-list.component.css']\n})\nexport class CommentListComponent implements OnInit, OnDestroy {\n\n  @Input() postId!: number;\n\n  @Input() noContentsTemplate: TemplateRef<any> | undefined;\n  @Input() itemTemplate: TemplateRef<any> | undefined;\n  @Input() headerTemplate: TemplateRef<any> | undefined;\n  @Input() footerTemplate: TemplateRef<any> | undefined;\n\n  state: any;\n\n  pageable: Pageable;\n  response : CommentListResponseModel|null;\n  errorDesc: any = \"\";\n  loading: boolean = false;\n\n  subscription: Subscription = new Subscription();\n\n  constructor(\n    private commentsService: CommentsService, \n    private router: Router, \n    private activatedRoute: ActivatedRoute) \n  { \n    this.state = this.router.getCurrentNavigation()?.extras.state;\n    this.response = null;\n    this.pageable = {\n      page: 0\n    };\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      const pageNum = params.pageNum ?? 0;\n      this.fetchPage(pageNum);\n    });\n    // Requery when the backend data changes\n    this.subscription.add(\n      this.commentsService.onChange.subscribe({ next: () =>  this.fetchPage(0) })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  fetchPage(pageNum: number): void {\n    //const routeParams = this.route.snapshot.paramMap;\n    //this.organizationId = routeParams.get('orgId') as string;  \n    this.pageable.page = pageNum;\n    this.loading = true;\n    this.commentsService.all(this.state?.endpoint, this.postId, this.pageable)\n      .subscribe(\n      {\n        next: (result: CommentListResponseModel) => {\n          this.response = result;\n          this.loading = false;\n        },\n        error: (err: any) => {\n          this.errorDesc = err.message;\n          this.loading = false;\n          console.log(this.errorDesc);\n        }\n      }\n    );\n  }\n\n  get items(): CommentModel[] {\n    if(!this.response?._embedded.comments)\n      return [];\n    return this.response?._embedded.comments;\n  }\n\n  get page(): PageModel|undefined {\n    return this.response?.page;\n  }\n\n  gotoPage(evt:any): void {\n    this.fetchPage(evt-1);\n  }\n}\n","<div *ngIf=\"loading; else contents\">\n    <utils-loader></utils-loader>\n</div>\n\n<ng-template #contents>\n    <utils-alert *ngIf=\"errorDesc;else itemsList\" [dismissable]=\"true\">\n        <p>\n            The specified request could not be completed!\n        </p>\n        <hr>\n        <p class=\"mb-0\">Error Details: </p>\n        <p>{{ errorDesc }}</p>\n    </utils-alert>\n</ng-template>\n\n<ng-template #itemsList>\n\n    <ng-container\n        [ngTemplateOutlet]=\"headerTemplate || defaultHeaderTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n\n    <utils-pager [page]=\"page\" (onSelectPage)=\"gotoPage($event)\"></utils-pager>\n    <comment-list-view\n        [comments]=\"items\"\n        [itemTemplate]=\"itemTemplate\"\n        [noContentsTemplate]=\"noContentsTemplate\">\n    </comment-list-view>\n    <utils-pager [page]=\"page\" (onSelectPage)=\"gotoPage($event)\"></utils-pager>\n\n    <ng-container\n        [ngTemplateOutlet]=\"footerTemplate || defaultFooterTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n\n</ng-template>\n\n<ng-template #defaultHeaderTemplate>\n</ng-template>\n\n<ng-template #defaultFooterTemplate>\n</ng-template>\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ViewEvent } from 'utils';\nimport { BlogPostModel } from '../../models/blog-post';\nimport { TopicModel } from '../../models/topic';\n\nexport type BlogPostViewEvent = ViewEvent<BlogPostModel>;\n\n@Component({\n  selector: 'blog-post-view',\n  templateUrl: './blog-post-view.component.html',\n  styleUrls: ['./blog-post-view.component.scss']\n})\nexport class BlogPostViewComponent implements OnInit {\n\n  @Input() post!: BlogPostModel;\n  @Input() topics!: TopicModel[];\n  @Input() enableComments: boolean = true;\n\n  @Input() headerTemplate: TemplateRef<any> | undefined;\n  @Input() contentTemplate: TemplateRef<any> | undefined;\n  @Input() footerTemplate: TemplateRef<any> | undefined;\n\n  @Output() onSelectItem = new EventEmitter<BlogPostViewEvent>();\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  get postId(): number {\n    return this.post.id;\n  }\n\n  selectItem(item: BlogPostModel, opcode: string): void {\n    this.onSelectItem.emit({\n      opcode: opcode,\n      item: item\n    });\n  }\n}\n","<div *ngIf=\"post\" class=\"bg-light p-4\">\n\n  <ng-container \n    [ngTemplateOutlet]=\"headerTemplate || defaultHeaderTemplate\"\n    [ngTemplateOutletContext]=\"{ $implicit: post, list: this }\">\n  </ng-container>\n\n  <ng-container \n    [ngTemplateOutlet]=\"contentTemplate || defaultContentTemplate\"\n    [ngTemplateOutletContext]=\"{ $implicit: post, list: this }\">\n  </ng-container>\n\n  <ng-container \n    [ngTemplateOutlet]=\"footerTemplate || defaultFooterTemplate\"\n    [ngTemplateOutletContext]=\"{ $implicit: post, list: this }\">\n  </ng-container>\n\n</div>\n\n<ng-template #defaultContentTemplate let-item let-parent=\"list\">\n  <p class=\"posttext \">\n    {{item.text}}\n  </p>\n  <h5>Posted under Topics:</h5>\n  <blog-topic-list-view [topics]=\"topics\"></blog-topic-list-view>\n  <hr class=\"my-4\">\n  <ng-container *ngIf=\"parent.enableComments\">\n    <comment-editor [updateMode]=\"false\" *authRequireLogin=\"true\"></comment-editor>\n    <hr class=\"my-4\">\n    <h5>Comments:</h5>\n    <div class=\"mb-3 col-sm-12\">\n      <blog-comment-list [postId]=\"postId\"></blog-comment-list>\n    </div>\n  </ng-container>\n</ng-template>\n\n<ng-template #defaultHeaderTemplate let-item let-parent=\"list\">\n  <div class=\"d-flex justify-content-between\">\n    <div>\n      <h2 class=\"blog-post-list-post-title\">{{item.title}}</h2>\n      <div class=\"created\"> {{item.owner}} created the post on {{item.createdOn | prettyDate }}.</div>\n    </div>\n    <div class=\"d-flex justify-content-between\">\n      <div class=\"ml-1\" *authRequireOwner=\"item.owner\">\n        <a class=\"btn btn-success\" role=\"button\" (click)=\"parent.selectItem(item, 'edit')\">Edit</a>\n      </div>\n      <div class=\"ml-1\" *authRequireOwner=\"item.owner\">\n        <a class=\"btn btn-success\" role=\"button\" (click)=\"parent.selectItem(item, 'delete')\">Delete</a>\n      </div>\n    </div>\n  </div>\n  <hr class=\"my-4\">\n</ng-template>\n\n<ng-template #defaultFooterTemplate let-item>\n  <div class=\"d-flex\">\n  </div>\n  <hr class=\"my-4\">\n</ng-template>\n","import { Component, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BlogPostModel, BlogPostResponseModel } from '../../models/blog-post';\nimport { TopicModel } from '../../models/topic';\nimport { PostsService } from '../../services/posts.service';\nimport { BlogPostViewEvent } from '../blog-post-view/blog-post-view.component';\n\n@Component({\n  selector: 'blog-post',\n  templateUrl: './blog-post.component.html',\n  styleUrls: ['./blog-post.component.scss']\n})\nexport class BlogPostComponent implements OnInit {\n\n  @Input() headerTemplate: TemplateRef<any> | undefined;\n  @Input() contentTemplate: TemplateRef<any> | undefined;\n  @Input() footerTemplate: TemplateRef<any> | undefined;\n\n  postId?: number;\n  postSlug?: string;\n  permalink: string = \"\";\n\n  response : BlogPostResponseModel|null;\n  errorDesc: any = \"\";\n  loading: boolean = false;\n\n  constructor(\n    private postService: PostsService, \n    private router: Router, \n    private activatedRoute: ActivatedRoute) \n  { \n    this.response = null;\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      this.fetchPost(params.postId, params.slug);\n    });\n  }\n\n  fetchPost(postId: number, postSlug?: string): void {\n    this.postId = postId;\n    this.postSlug = postSlug;\n\n    this.loading = true;\n    this.postService.one(\"posts\", this.postId)\n      .subscribe(\n      {\n        next: (result: BlogPostResponseModel) => {\n          this.postItem = result;\n          this.loading = false;\n        },\n        error: (err: any) => {\n          this.errorDesc = err.message;\n          this.loading = false;\n          console.log(this.errorDesc);\n        }\n      }\n    );\n  }\n\n  set postItem(item: BlogPostResponseModel) {\n    this.response = item;\n    this.response.permalink = window.location.origin + this.router.url;\n    this.postId = this.response.id;\n    this.postSlug = this.response.slug;\n  }\n\n  get postItem(): BlogPostResponseModel {\n    return this.response!;\n  }\n\n  handleViewEvent(evt: BlogPostViewEvent) {\n    switch(evt.opcode) {\n      case 'edit': this.editPost(evt.item); break;\n      case 'delete': this.deletePost(evt.item); break;\n    }\n  }\n\n  editPost(post: BlogPostModel): void {\n    this.router.navigate(['/posts', 'edit', post.id]);\n  }\n\n  deletePost(post: BlogPostModel): void {\n    \n  }\n}\n","<div *ngIf=\"loading; else contents\">\n    <utils-loader></utils-loader>\n</div>\n\n<ng-template #contents>\n    <utils-alert *ngIf=\"errorDesc; else viewer\" [dismissable]=\"false\" [minimal]=\"false\">\n        <p>An error occurred accessing the post: {{ errorDesc }}</p>\n    </utils-alert>\n</ng-template>\n\n<ng-template #viewer>\n    <blog-post-view \n        [post]=\"postItem\" \n        [topics]=\"postItem?.topics\"\n        [headerTemplate]=\"headerTemplate\"\n        [contentTemplate]=\"contentTemplate\"\n        [footerTemplate]=\"footerTemplate\"\n        (onSelectItem)=\"handleViewEvent($event)\">\n    </blog-post-view>\n</ng-template>","import { AbstractControl, AsyncValidatorFn } from '@angular/forms';\nimport { of } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { PostsService } from '../services/posts.service';\n\n\nexport function uniqueSlugValidator(postService: PostsService): AsyncValidatorFn \n{\n  return (control: AbstractControl): {[key: string]: boolean} | any => \n  {\n      var slug = control.value;\n      if (!slug || control.pristine) {\n        return of(null);\n      }\n      return postService.findBySlug(\"\", slug).pipe(\n          map(response => !!response.page.totalElements ? {'slugExists': true} : null)\n        );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Pageable } from 'utils';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { TopicsServiceConfig, TopicsServiceConfigToken } from '../config/config';\nimport { TopicResponseModel, TopicListResponseModel } from '../models/topic';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TopicsService {\n\n  public onChange: Subject<any> = new Subject<any>();\n\n  constructor(@Inject(TopicsServiceConfigToken) private config: TopicsServiceConfig, private httpClient: HttpClient) \n  { }\n\n  public all(endpoint: string, pageable?: Pageable): Observable<TopicListResponseModel> {\n\n    const page: number = pageable ? pageable.page : 0;\n    const pageSize: number = (pageable && pageable.limit) ? pageable.limit : this.config.pageSize;\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n\n    return this.httpClient\n            .get<TopicListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}`, {\n              params: {\n                \"page\": page.toString(),\n                \"size\": pageSize.toString(),\n                \"sort\": \"caption,asc\"\n              }\n            })\n            .pipe(\n              map(data => {\n                return data as TopicListResponseModel;\n              })\n            );\n  }\n\n  public one(endpoint: string, id: number): Observable<TopicResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n              .get<TopicResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${id}`)\n              .pipe(\n                map(data => {\n                  return data as TopicResponseModel;\n                })\n              );\n  }\n\n  public findByCaption(endpoint: string, caption: string, pageable?: Pageable): Observable<TopicListResponseModel> {\n    const query = {\n      \"conditions\": [\n        { \"attribute\": \"caption\", \"operator\": \"eq\", \"value\": `%${caption}%` }\n      ]\n    };\n    return this.search(endpoint, query, pageable);\n  }\n\n  public findMatchingCaption(endpoint: string, caption: string, pageable?: Pageable): Observable<TopicListResponseModel> {\n    const query = {\n      \"conditions\": [\n        { \"attribute\": \"caption\", \"operator\": \"like\", \"value\": `%${caption}%` }\n      ]\n    };\n    return this.search(endpoint, query, pageable);\n  }\n\n  public search(endpoint: string, query: any, pageable?: Pageable): Observable<TopicListResponseModel> {\n\n    const page: number = pageable ? pageable.page : 0;\n    const pageSize: number = (pageable && pageable.limit) ? pageable.limit : this.config.pageSize;\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n\n    return this.httpClient\n            .get<TopicListResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/search`, \n            {\n              \"params\": { \n                \"q\": JSON.stringify(query),\n                \"page\": page.toString(),\n                \"size\": pageSize.toString(),\n                \"sort\": \"caption,asc\"\n              }\n            })\n            .pipe(\n              map(data => {\n                return data as TopicListResponseModel;\n              })\n            );\n  }\n\n  public create(endpoint: string, caption: string): Observable<TopicResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    const topicRepr = {\n      \"caption\": caption\n    };\n    return this.httpClient\n            .post<TopicResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}`, topicRepr)\n            .pipe(\n              map(data => {\n                return data as TopicResponseModel;\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n\n  public update(endpoint: string, id: number, caption: string): Observable<TopicResponseModel> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    const topicRepr = {\n      \"caption\": caption\n    };\n    return this.httpClient\n            .put<TopicResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${id}`, topicRepr)\n            .pipe(\n              map(data => {\n                return data as TopicResponseModel;\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n\n  public delete(endpoint: string, id: number): Observable<void> {\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n            .delete<void>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${id}`)\n            .pipe(\n              catchError((error: any) => {\n                return throwError(new Error(error.status));\n              }),\n              tap({\n                next: x => { this.onChange.next(x); }\n              })\n            );\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Pageable, PageModel } from 'utils';\nimport { TopicModel, TopicListResponseModel } from '../../models/topic';\nimport { TopicsService } from '../../services/topics.service';\nimport { TopicListViewEvent } from '../topic-list-view/topic-list-view.component';\n\n@Component({\n  selector: 'blog-topic-list',\n  templateUrl: './topic-list.component.html',\n  styleUrls: ['./topic-list.component.scss']\n})\nexport class TopicListComponent implements OnInit, OnDestroy {\n\n  @Input() enableSearch: boolean = true;\n  @Input() filterText: string = '';\n\n  @Input() itemTemplate: TemplateRef<any> | undefined;\n  @Input() noContentsTemplate: TemplateRef<any> | undefined;\n  @Input() headerTemplate: TemplateRef<any> | undefined;\n  @Input() footerTemplate: TemplateRef<any> | undefined;\n\n  @Input('onSelectTopic') \n  onSelect: (topic: TopicModel) => void = \n    (item) => this.navigateToTopicPosts(item);\n      \n  pageable: Pageable;\n  response : TopicListResponseModel|null;\n  errorDesc: any = \"\";\n  loading: boolean = false;\n\n  filter: string = \"\";\n\n  subscription: Subscription = new Subscription();\n\n\n  constructor(\n    private topicsService: TopicsService, \n    private router: Router, \n    private activatedRoute: ActivatedRoute) \n  { \n    this.response = null;\n    this.pageable = {\n      page: 0\n    };\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      const pageNum = params.pageNum ?? 0;\n      this.fetchPage(pageNum);\n    }); \n    // Requery when the backend data changes\n    this.subscription.add(\n      this.topicsService.onChange.subscribe({ next: () => this.fetchPage(this.pageable.page) })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  responseHandler = {\n    next: (result: TopicListResponseModel) => {\n      this.response = result;\n      this.loading = false;\n    },\n    error: (err: any) => {\n      this.errorDesc = err.message;\n      this.loading = false;\n      console.log(this.errorDesc);\n    }\n  }\n\n  onApplyFilter(text: string): void {\n    this.filterText = text;\n    this.fetchPage(0);\n  }\n\n  fetchPage(pageNum: number): void {\n    this.pageable.page = pageNum;\n    if(!!this.filterText) {\n      this.topicsService.findMatchingCaption(\"\", this.filterText, this.pageable).subscribe(this.responseHandler);\n    }\n    else {\n      this.topicsService.all(\"\", this.pageable).subscribe(this.responseHandler);\n    }\n  }\n\n  get items(): TopicModel[] {\n    if(!this.response?._embedded.topics)\n      return [];\n    return this.response?._embedded.topics;\n  }\n\n  get page(): PageModel|undefined {\n    return this.response?.page;\n  }\n\n  get hasItems(): boolean {\n    return !!(this.page?.totalElements);\n  }\n\n  handleListViewEvent(evt: TopicListViewEvent) {\n    switch(evt.opcode) {\n      case 'select': this.onSelect(evt.item); break;\n    }\n  }\n\n  navigateToTopicPosts(topic: TopicModel): void {\n    this.router.navigate(['/topics', topic.id, \"posts\"], \n    { \n      state: { \"endpoint\": `topics/${topic.id}/posts` }\n    });\n  }\n\n  gotoPage(evt: any): void {\n    this.fetchPage(evt-1);\n  }\n}\n","<div *ngIf=\"loading; else contents\">\n    <utils-loader></utils-loader>\n</div>\n\n<ng-template #contents>\n    <utils-alert *ngIf=\"errorDesc;else itemsList\" [dismissable]=\"false\" [minimal]=\"true\">\n        <p>An error occurred fetching the topics list: {{ errorDesc }}</p>\n    </utils-alert>\n</ng-template>\n\n<ng-template #itemsList>\n\n    <ng-container\n        [ngTemplateOutlet]=\"headerTemplate || defaultHeaderTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n\n    <utils-search-box (onApplyFilter)=\"onApplyFilter($event)\" *ngIf=\"enableSearch\">\n    </utils-search-box>\n    <blog-topic-list-view \n        [topics]=\"items\" \n        [itemTemplate]=\"itemTemplate\"\n        [noContentsTemplate]=\"noContentsTemplate\"\n        (onSelectItem)=\"handleListViewEvent($event)\">\n    </blog-topic-list-view>\n    <utils-pager [page]=\"page\" (onSelectPage)=\"gotoPage($event)\">\n    </utils-pager>\n\n    <ng-container\n        [ngTemplateOutlet]=\"footerTemplate || defaultFooterTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n\n</ng-template>\n\n<ng-template #defaultHeaderTemplate>\n</ng-template>\n  \n<ng-template #defaultFooterTemplate>\n</ng-template>\n  ","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { TopicModel } from '../../models/topic';\n\n@Component({\n  selector: 'topic-selector',\n  templateUrl: './topic-selector.component.html',\n  styleUrls: ['./topic-selector.component.css']\n})\nexport class TopicSelectorComponent implements OnInit {\n\n  @Input()\n  maxTopics: number = 10;\n  maxTopicsError: boolean = false;\n\n  @Input()\n  initialTopics: TopicModel[] = [];\n  selectedTopics: TopicModel[] = [];\n\n  @Input() itemTemplate: TemplateRef<any> | undefined;\n  @Input() noContentsTemplate: TemplateRef<any> | undefined;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.selectedTopics = this.initialTopics;\n  }\n\n  topicClicked: (topic: TopicModel) => void = \n    (item) => {\n      if(this.isTopicSelected(item))\n        this.unselectTopic(item);\n      else\n        this.selectTopic(item);\n    }\n\n  isTopicSelected(topic: TopicModel): boolean {\n    return this.selectedTopics.findIndex(i => i.caption.toUpperCase() === topic.caption.toUpperCase()) > -1;\n  }\n\n  selectTopic(topic: TopicModel): void {\n\n    this.maxTopicsError = (!!this.maxTopics && this.selectedTopics.length >= this.maxTopics);\n    if(this.maxTopicsError) {\n      return;\n    }\n\n    this.selectedTopics.push(topic);\n    this.selectedTopics.sort((a,b) => \n      a.caption.toUpperCase().localeCompare(b.caption.toUpperCase())\n    );\n  }\n\n  unselectTopic(topic: TopicModel): void {\n    this.selectedTopics = this.selectedTopics.filter(i => i.caption.toUpperCase() !== topic.caption.toUpperCase());\n    this.maxTopicsError = (!!this.maxTopics && this.selectedTopics.length >= this.maxTopics);\n  }\n}\n","\n\n<label class=\"form-label\">Selected Topics:</label>\n<div>\n    <blog-topic-list-view [topics]=\"selectedTopics\"></blog-topic-list-view>\n    <utils-alert *ngIf=\"maxTopicsError\" [dismissable]=\"true\" [minimal]=\"true\">\n        Sorry, cannot select more than {{maxTopics}} topics for a post.\n    </utils-alert>\n</div>\n<label class=\"form-label\">Available Topics:</label>\n<blog-topic-list \n    [itemTemplate]=\"itemTemplate\"\n    [noContentsTemplate]=\"noContentsTemplate\"\n    [onSelectTopic]=\"topicClicked\">\n</blog-topic-list>\n","import { Location } from '@angular/common';\nimport { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TopicModel, TopicResponseModel, TopicListResponseModel } from '../../models/topic';\nimport { TopicsService } from '../../services/topics.service';\n\n@Component({\n  selector: 'topic-editor',\n  templateUrl: './topic-editor.component.html',\n  styleUrls: ['./topic-editor.component.css']\n})\nexport class TopicEditorComponent implements OnInit {\n\n  @Input() headerTemplate: TemplateRef<any> | undefined;\n  @Input(\"topicId\") paramTopicId?: string;\n  @Input() updateMode: boolean = true;\n\n  topicId?: number;\n  topic : TopicModel|null = null;\n\n  errorDesc: any = \"\";\n  loading: boolean = false;\n\n  form!: FormGroup;\n\n  constructor(\n    private topicService: TopicsService,\n    private router: Router, \n    private location: Location,\n    private activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n\n    this.form = new FormGroup({\n      \"caption\": new FormControl(\"\", Validators.required)\n    });\n\n    this.activatedRoute.params.subscribe(params => {\n      this.topicId = params.topicId ?? this.paramTopicId;\n      if(this.isUpdateMode)\n        this.fetchTopic(this.topicId!);\n    });\n  }\n\n  get isUpdateMode(): boolean { \n    return this.updateMode && this.topicId !== undefined; \n  }\n  get caption() { return this.form.get('caption'); }\n\n  set theTopic(item: TopicModel) {\n    this.topic = this.updateMode ? item : null;\n    this.topicId = this.updateMode ? this.topic?.id : undefined;\n    console.info(\"Got post id: \" + this.topicId!);\n  }\n\n  updateForm(): void {\n    this.caption!.setValue (this.topic?.caption);\n  }\n\n  fetchResponseHandler = {\n    next: (result: TopicResponseModel) => {\n      this.theTopic = result;\n      this.updateForm();\n      this.loading = false;\n    },\n    error: (err: any) => {\n      this.errorDesc = err.message;\n      this.loading = false;\n      return false;\n    }\n  };\n\n  fetchTopic(topicId: number): void {\n    this.loading = true;\n    this.topicService\n      .one(\"\", topicId)\n      .subscribe(this.fetchResponseHandler);\n  }      \n\n  createNewTopic(): void {\n    this.topicService\n      .create(\"\", this.caption?.value)\n      .subscribe(this.fetchResponseHandler);\n  }\n\n  updateTopic(): void {\n    this.topicService\n      .update(\"\", this.topicId!, this.caption?.value)\n      .subscribe(this.fetchResponseHandler);\n  }\n\n  cancel(): void {\n    this.location.back();\n  }\n}\n","<div *ngIf=\"loading; else contents\">\n    <utils-loader></utils-loader>\n</div>\n\n<ng-template #defaultTitleTemplate let-item>\n    <div class=\"d-flex justify-content-between\">\n        <div>\n            <h5>CREATE A NEW TOPIC</h5>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #contents>\n    <ng-container \n        [ngTemplateOutlet]=\"headerTemplate || defaultTitleTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n    <utils-alert *ngIf=\"errorDesc; else editor\" [dismissable]=\"false\" [minimal]=\"false\">\n        <p>An error occurred accessing the post: {{ errorDesc }}</p>\n    </utils-alert>\n</ng-template>\n\n<ng-template #editor>\n    <form [formGroup]=\"form\" novalidate onSubmit=\"return false;\">\n        <div class=\"row\">\n            <div class=\"mb-3 col-sm-9\">\n                <input type=\"text\" class=\"form-control\" id=\"caption\" placeholder=\"Topic name ... \"\n                    formControlName=\"caption\" required>\n\n                <div *ngIf=\"caption?.invalid && (caption?.dirty || caption?.touched)\">\n                    <utils-alert *ngIf=\"caption?.errors?.required\" [dismissable]=\"false\" [minimal]=\"true\">\n                        Name is required.\n                    </utils-alert>\n                    <utils-alert *ngIf=\"caption?.errors?.topicExists\" [dismissable]=\"false\" [minimal]=\"true\">\n                        Topic name is already taken!\n                    </utils-alert>\n                </div>\n\n            </div>\n            <div class=\"mb-3 col-sm-3\" *ngIf=\"!isUpdateMode\">\n                <input class=\"btn btn-primary\" type=\"button\" [disabled]=\"loading || !form.valid\" value=\"Create\" (click)=\"createNewTopic()\">\n            </div>\n            <div class=\"mb-3 col-sm-3\" *ngIf=\"isUpdateMode\">\n                <input class=\"btn btn-primary\" type=\"button\" [disabled]=\"loading || !form.valid\" value=\"Update\" (click)=\"updateTopic()\">\n            </div>\n        </div>\n    </form>\n</ng-template>\n","import { Location } from '@angular/common';\nimport { Component, Inject, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PostsServiceConfig, PostsServiceConfigToken } from '../../config/config';\nimport { BlogPostModel, BlogPostResponseModel } from '../../models/blog-post';\nimport { TopicModel } from '../../models/topic';\nimport { PostsService } from '../../services/posts.service';\nimport { TopicsService } from '../../services/topics.service';\nimport { uniqueSlugValidator } from '../../validators/unique-slug-validator.directive';\nimport { TopicSelectorComponent } from '../topic-selector/topic-selector.component';\n\nfunction slugify(text: string) {\n  const from = \"ãàáäâẽèéëêìíïîõòóöôùúüûñç·/_,:;\"\n  const to = \"aaaaaeeeeeiiiiooooouuuunc------\"\n\n  const newText = text.split('').map(\n    (letter, i) => letter.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i)))\n\n  return newText\n    .toString()                     // Cast to string\n    .toLowerCase()                  // Convert the string to lowercase letters\n    .trim()                         // Remove whitespace from both sides of a string\n    .replace(/\\s+/g, '-')           // Replace spaces with -\n    .replace(/&/g, '-y-')           // Replace & with 'and'\n    .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\n    .replace(/\\-\\-+/g, '-');        // Replace multiple - with single -\n}\n\n@Component({\n  selector: 'blog-post-editor',\n  templateUrl: './blog-post-editor.component.html',\n  styleUrls: ['./blog-post-editor.component.scss']\n})\nexport class BlogPostEditorComponent implements OnInit {\n\n  @Input() headerTemplate: TemplateRef<any> | undefined;\n  @Input(\"postId\") paramPostId?: number;\n  @Input() updateMode: boolean = true;\n\n  postId?: number;\n  post : BlogPostModel|null = null;\n\n  successDesc: any = \"\";\n  errorDesc: any = \"\";\n  loading: boolean = false;\n\n  form!: FormGroup;\n\n  @ViewChild('topicSelector')\n  topicSelector!: TopicSelectorComponent;\n\n  constructor(\n    @Inject(PostsServiceConfigToken) private config: PostsServiceConfig,\n    private postService: PostsService, \n    private location: Location,\n    private activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n\n    this.form = new FormGroup(\n    {\n      \"title\": new FormControl(\"\", [\n          Validators.required,\n          Validators.maxLength(this.config.maxTitleLength),\n        ]),\n      \"slug\": new FormControl(\"\", [\n          Validators.required,\n          Validators.maxLength(this.config.maxTitleLength),\n          Validators.pattern(/^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$/)\n        ], \n        uniqueSlugValidator(this.postService)\n      ),\n      \"text\": new FormControl(\"\", [\n          Validators.required, \n          Validators.maxLength(this.config.maxContentLength)\n        ]),\n    });\n\n    this.title?.valueChanges.subscribe(val => {\n      if(!this.slug?.touched || !this.slug?.value) {\n        this.generateSlug();\n      }\n    });\n\n    this.activatedRoute.params.subscribe(params => {\n      this.postId = params.postId ?? this.paramPostId;\n      if(this.isUpdateMode)\n        this.fetchPost(this.postId!);\n    });\n  }\n\n  get isUpdateMode(): boolean { \n    return this.updateMode && this.postId !== undefined; \n  }\n  get title() { return this.form.get('title'); }\n  get slug() { return this.form.get('slug'); }\n  get text() { return this.form.get('text'); }\n\n  get selectedTopics(): TopicModel[] {\n    return this.post?.topics || [];\n  }\n\n  set blogPost(item: BlogPostModel) {\n    this.post = this.updateMode ? item : null;\n    this.postId = this.updateMode ? this.post?.id : undefined;\n    console.info(\"Got post id: \" + this.postId!);\n  }\n\n  generateSlug(): void {\n    this.slug?.setValue(slugify(this.title?.value));\n  }\n\n  updateForm(): void {\n    this.title!.setValue (this.post?.title);\n    this.slug!.setValue (this.post?.slug);\n    this.text!.setValue (this.post?.text);\n  }\n\n  fetchResponseHandler = {\n    next: (result: BlogPostResponseModel) => {\n      this.blogPost = result;\n      this.updateForm();\n      this.loading = false;\n    },\n    error: (err: any) => {\n      this.errorDesc = err.message;\n      this.loading = false;\n      return false;\n    }\n  };\n\n  fetchPost(postId: number): void {\n    this.loading = true;\n    this.postService\n      .one(\"posts\", postId)\n      .subscribe(this.fetchResponseHandler);\n  }      \n\n  updateResponseHandler = {\n    next: (result: BlogPostResponseModel) => {\n      this.blogPost = result;\n      this.assignTopics();\n    },\n    error: (err: any) => {\n      this.errorDesc = err.message;\n      this.loading = false;\n      return false;\n    }\n  };\n\n  createNewPost(): void {\n    this.postService\n      .create(\"posts\", this.slug?.value, this.title?.value, this.text?.value)\n      .subscribe(this.updateResponseHandler);\n  }\n\n  updatePost(): void {\n    this.postService\n      .update(\"posts\", this.postId!, this.slug?.value, this.title?.value, this.text?.value)\n      .subscribe(this.updateResponseHandler);\n  }\n\n  assignTopics(): void {\n    const selectedTopics = this.topicSelector.selectedTopics.map(i => i.id);\n    console.info(selectedTopics);\n    this.postService\n      .assignTopics(\"posts\", this.postId!, selectedTopics)\n      .subscribe({\n        next: () => {\n          this.updateForm();\n          this.successDesc = \"Post updated successfully!\";\n          this.loading = false;\n        },\n        error: (err: any) => {\n          this.errorDesc = err.message;\n          this.loading = false;\n          return false;\n        }\n      });\n  }\n\n  cancel(): void {\n    this.location.back();\n  }\n}\n","<div *ngIf=\"loading; else contents\">\n    <utils-loader></utils-loader>\n</div>\n\n<ng-template #defaultTitleTemplate let-item>\n    <div class=\"d-flex justify-content-between\">\n        <div>\n            <h5>WRITE A POST</h5>\n        </div>\n        <div><a class=\"btn btn-success\" role=\"button\" (click)=\"cancel()\">Cancel</a></div>\n    </div>\n    <hr class=\"my-4\">\n</ng-template>\n\n<ng-template #contents>\n    <ng-container \n        [ngTemplateOutlet]=\"headerTemplate || defaultTitleTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n    <utils-alert *ngIf=\"successDesc\" [dismissable]=\"false\" [minimal]=\"false\">\n        <p>{{ successDesc }}</p>\n    </utils-alert>\n    <utils-alert *ngIf=\"errorDesc; else editor\" [dismissable]=\"false\" [minimal]=\"false\">\n        <p>An error occurred accessing the post: {{ errorDesc }}</p>\n    </utils-alert>\n</ng-template>\n\n<ng-template #editor>\n    <form [formGroup]=\"form\" novalidate onSubmit=\"return false;\">\n        <div class=\"row\">\n            <div class=\"mb-3 col-sm-12\">\n                <label for=\"title\" class=\"form-label\">Title</label>\n                <input type=\"text\" class=\"form-control\" id=\"title\" \n                    placeholder=\"Title of your post ... \"\n                    formControlName=\"title\" required>\n\n                <div *ngIf=\"title?.invalid && (title?.dirty || title?.touched)\">\n                    <utils-alert *ngIf=\"title?.errors?.required\" [dismissable]=\"false\" [minimal]=\"true\">\n                        Title is required.\n                    </utils-alert>\n                    <utils-alert *ngIf=\"title?.errors?.maxLength\" [dismissable]=\"false\" [minimal]=\"true\">\n                        Title length exceeds limit.\n                    </utils-alert>\n                </div>\n\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"mb-3 col-sm-12\">\n                <label for=\"slug\" class=\"form-label\">Slug</label>\n                <div class=\"d-flex justify-content-between\">\n                    <input type=\"text\" class=\"form-control\" id=\"slug\" \n                        placeholder=\"Slug goes here ... e.g. this-is-a-valid-slug\"\n                        formControlName=\"slug\" required>\n                    <input class=\"btn btn-primary ml-1\" type=\"button\" [disabled]=\"loading\" value=\"Auto Generate\" (click)=\"generateSlug()\">\n                </div>\n                <div *ngIf=\"slug?.invalid && (slug?.dirty || slug?.touched)\">\n                    <utils-alert *ngIf=\"slug?.errors?.required\" [dismissable]=\"false\" [minimal]=\"true\">\n                        Slug is required.\n                    </utils-alert>\n                    <utils-alert *ngIf=\"slug?.errors?.maxLength\" [dismissable]=\"false\" [minimal]=\"true\">\n                        Slug length exceeds limit.\n                    </utils-alert>\n                    <utils-alert *ngIf=\"slug?.errors?.pattern\" [dismissable]=\"false\" [minimal]=\"true\">\n                        Only clean url like expressions are allowed in slugs e.g. this-is-a-valid-slug\n                    </utils-alert>\n                    <utils-alert *ngIf=\"slug?.errors?.slugExists\" [dismissable]=\"false\" [minimal]=\"true\">\n                        Slug is already taken!\n                    </utils-alert>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"mb-3 col-sm-6\">\n                <label for=\"text\" class=\"form-label\">Write your story here:</label>\n                <textarea class=\"form-control\" id=\"postText\" rows=\"3\" formControlName=\"text\" required></textarea>\n\n                <div *ngIf=\"text?.invalid && (text?.dirty || text?.touched)\">\n                    <utils-alert *ngIf=\"text?.errors?.pattern\" [dismissable]=\"false\" [minimal]=\"true\">\n                        Sorry, cannot leave this empty!\n                    </utils-alert>\n                    <utils-alert *ngIf=\"text?.errors?.maxLength\" [dismissable]=\"false\" [minimal]=\"true\">\n                        Conent length exceeds limit.\n                    </utils-alert>\n                </div>\n\n            </div>\n            <div class=\"mb-3 col-sm-6\">\n                <label class=\"form-label\">Preview</label>\n                <markdown class=\"variable-binding\" [data]=\"text?.value\"></markdown>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"mb-3 col-sm-12\">\n                <topic-selector #topicSelector \n                    [initialTopics]=\"selectedTopics\"\n                    [noContentsTemplate]=\"topicsNotFoundTemplate\">\n                </topic-selector>\n            </div>\n        </div>\n        <div class=\"mb-3\" *ngIf=\"!isUpdateMode\">\n            <input class=\"btn btn-primary\" type=\"button\" [disabled]=\"loading || !form.valid\" value=\"Post\" (click)=\"createNewPost()\">\n        </div>\n        <div class=\"mb-3\" *ngIf=\"isUpdateMode\">\n            <input class=\"btn btn-primary\" type=\"button\" [disabled]=\"loading || !form.valid\" value=\"Update\" (click)=\"updatePost()\">\n        </div>\n    </form>\n</ng-template>\n\n<ng-template #topicsNotFoundTemplate let-item>\n    No topic found!\n    <topic-editor *authRequireRole=\"'admin'\"></topic-editor>\n</ng-template>\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ViewEvent } from 'utils';\nimport { BlogPostModel } from '../../models/blog-post';\n\nexport type BlogPostListViewEvent = ViewEvent<BlogPostModel>;\n\n@Component({\n  selector: 'blog-post-list-view',\n  templateUrl: './blog-post-list-view.component.html',\n  styleUrls: ['./blog-post-list-view.component.scss'],\n})\nexport class BlogPostListViewComponent implements OnInit {\n\n  @Input() posts!: BlogPostModel[];\n\n  @Input() itemTemplate: TemplateRef<any> | undefined;\n  @Input() noContentsTemplate: TemplateRef<any> | undefined;\n\n  @Output() onSelectItem = new EventEmitter<BlogPostListViewEvent>();\n\n  ngOnInit(): void {}\n\n  selectItem(item: BlogPostModel, opcode: string): void {\n    this.onSelectItem.emit({\n      opcode: opcode,\n      item: item\n    });\n  }\n}\n","<ng-container *ngIf=\"posts\">\n    <div *ngFor=\"let x of posts\" class=\"bg-light\">\n        <ng-container [ngTemplateOutlet]=\"itemTemplate || defaultItemTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: x, list: this }\">\n        </ng-container>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"!posts\">\n    <ng-container [ngTemplateOutlet]=\"noContentsTemplate || defaultNoContentsTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n</ng-container>\n\n<ng-template #defaultItemTemplate let-item let-parent=\"list\">\n    <div class=\"p-1\">\n        <a (click)=\"parent.selectItem(item, 'select')\"><h4 class=\"blog-post-list-post-title\">{{item.title}}</h4></a>\n        <div class=\"created\"> {{item.owner}} created the post on {{item.createdOn | prettyDate }}.</div>\n        <p class=\"posttext \">\n            {{item.text}}\n        </p>\n        <p>\n            <blog-topic-list-view [topics]=\"item.topics\"></blog-topic-list-view>\n        </p>\n        <button class=\"btn btn-success\" (click)=\"parent.selectItem(item, 'select')\">Read More...</button>\n        <hr class=\"my-4\">\n    </div>\n</ng-template>\n\n<ng-template #defaultNoContentsTemplate let-item>\n    No blog posts found! Why not create one?\n</ng-template>","import { Component, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BlogPostModel, BlogPostListResponseModel } from '../../models/blog-post';\nimport { PostsService } from '../../services/posts.service';\nimport { Pageable, PageModel } from 'utils';\nimport { BlogPostListViewEvent } from '../blog-post-list-view/blog-post-list-view.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'blog-post-list',\n  templateUrl: './blog-post-list.component.html',\n  styleUrls: ['./blog-post-list.component.scss']\n})\nexport class BlogPostListComponent implements OnInit, OnDestroy {\n\n  @Input() noContentsTemplate: TemplateRef<any> | undefined;\n  @Input() itemTemplate: TemplateRef<any> | undefined;\n  @Input() headerTemplate: TemplateRef<any> | undefined;\n  @Input() footerTemplate: TemplateRef<any> | undefined;\n\n  @Input('onSelectPost') \n  onSelect: (post: BlogPostModel) => void = \n    (item) => this.navigateToPost(item);\n\n  state: any;\n\n  pageable: Pageable;\n  response : BlogPostListResponseModel|null;\n  errorDesc: any = \"\";\n  loading: boolean = false;\n\n  subscription: Subscription = new Subscription();\n\n  constructor(\n    private postService: PostsService, \n    private router: Router, \n    private activatedRoute: ActivatedRoute) \n  { \n    this.state = this.router.getCurrentNavigation()?.extras.state;\n    this.response = null;\n    this.pageable = {\n      page: 0\n    };\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      const pageNum = params.pageNum ?? 0;\n      this.fetchPage(pageNum);\n    });\n    // Requery when the backend data changes\n    this.subscription.add(\n      this.postService.onChange.subscribe({ next: () => this.fetchPage(0) })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  fetchPage(pageNum: number): void {\n    //const routeParams = this.route.snapshot.paramMap;\n    //this.organizationId = routeParams.get('orgId') as string;  \n    this.pageable.page = pageNum;\n    this.loading = true;\n    this.postService.all(this.state?.endpoint, this.pageable)\n      .subscribe(\n      {\n        next: (result: BlogPostListResponseModel) => {\n          this.response = result;\n          this.loading = false;\n        },\n        error: (err: any) => {\n          this.errorDesc = err.message;\n          this.loading = false;\n          console.log(this.errorDesc);\n        }\n      }\n    );\n  }\n\n  get items(): BlogPostModel[] {\n    if(!this.response?._embedded.posts)\n      return [];\n    return this.response?._embedded.posts;\n  }\n\n  get page(): PageModel|undefined {\n    return this.response?.page;\n  }\n\n  handleListViewEvent(evt: BlogPostListViewEvent) {\n    switch(evt.opcode) {\n      case 'select': this.onSelect(evt.item); break;\n    }\n  }\n\n  navigateToPost(post: BlogPostModel): void {\n    this.router.navigate([\"/posts\", post.id, post.slug]);\n  }\n\n  gotoPage(evt:any): void {\n    this.fetchPage(evt-1);\n  }\n}\n","<div *ngIf=\"loading; else contents\">\n    <utils-loader></utils-loader>\n</div>\n\n<ng-template #contents>\n    <utils-alert *ngIf=\"errorDesc;else itemsList\" [dismissable]=\"true\">\n        <p>\n            The specified request could not be completed!\n        </p>\n        <hr>\n        <p class=\"mb-0\">Error Details: </p>\n        <p>{{ errorDesc }}</p>\n    </utils-alert>\n</ng-template>\n\n<ng-template #itemsList>\n\n    <ng-container\n        [ngTemplateOutlet]=\"headerTemplate || defaultHeaderTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n\n    <utils-pager [page]=\"page\" (onSelectPage)=\"gotoPage($event)\"></utils-pager>\n    <blog-post-list-view\n        [posts]=\"items\"\n        [itemTemplate]=\"itemTemplate\"\n        [noContentsTemplate]=\"noContentsTemplate\"\n        (onSelectItem)=\"handleListViewEvent($event)\">\n    </blog-post-list-view>\n    <utils-pager [page]=\"page\" (onSelectPage)=\"gotoPage($event)\"></utils-pager>\n\n    <ng-container\n        [ngTemplateOutlet]=\"footerTemplate || defaultFooterTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n\n</ng-template>\n\n<ng-template #defaultHeaderTemplate>\n</ng-template>\n\n<ng-template #defaultFooterTemplate>\n</ng-template>\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './blog-post/blog-post.component';\nexport * from './blog-post-editor/blog-post-editor.component';\nexport * from './blog-post-list/blog-post-list.component';\nexport * from './blog-post-list-view/blog-post-list-view.component';\nexport * from './blog-post/blog-post.component';\nexport * from './blog-post-view/blog-post-view.component';\nexport * from './topic-list/topic-list.component';\nexport * from './topic-list-view/topic-list-view.component';\nexport * from './comment-list/comment-list.component';\nexport * from './comment-list-view/comment-list-view.component';\n","/*\n * Public API Surface of blog\n */\n\nexport * from './posts.service';\nexport * from './topics.service';\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { OidcAuthModule } from 'auth-oidc';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { UtilsModule } from 'utils';\nimport { \n  BlogPostComponent, \n  BlogPostEditorComponent, \n  BlogPostListComponent, \n  BlogPostListViewComponent, \n  BlogPostViewComponent, \n  TopicListComponent, \n  TopicListViewComponent \n} from './components/public-api';\nimport { BlogModuleConfig, CommentsServiceConfigToken, PostsServiceConfigToken, TopicsServiceConfigToken } from './config/config';\nimport { PostsService } from './services/posts.service';\nimport { TopicsService } from './services/topics.service';\nimport { TopicSelectorComponent } from './components/topic-selector/topic-selector.component';\nimport { TopicEditorComponent } from './components/topic-editor/topic-editor.component';\nimport { CommentListComponent } from './components/comment-list/comment-list.component';\nimport { CommentListViewComponent } from './components/comment-list-view/comment-list-view.component';\nimport { CommentEditorComponent } from './components/comment-editor/comment-editor.component';\n\n@NgModule({\n  declarations: [\n    BlogPostListViewComponent,\n    BlogPostListComponent,\n    TopicListViewComponent,\n    TopicListComponent,\n    BlogPostEditorComponent,\n    BlogPostComponent,\n    BlogPostViewComponent,\n    TopicSelectorComponent,\n    TopicEditorComponent,\n    CommentListComponent,\n    CommentListViewComponent,\n    CommentEditorComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    MarkdownModule.forChild(),\n    OidcAuthModule.forChild(),\n    UtilsModule\n  ],\n  exports: [\n    BlogPostListViewComponent,\n    BlogPostListComponent,\n    TopicListViewComponent,\n    TopicListComponent,\n    BlogPostEditorComponent,\n    BlogPostComponent,\n    BlogPostViewComponent\n  ]\n})\nexport class BlogModule {\n\n  static forRoot(config: BlogModuleConfig): ModuleWithProviders<BlogModule> {\n    return {\n      ngModule: BlogModule,\n      providers: [\n        PostsService,\n        TopicsService,\n        {\n          provide: PostsServiceConfigToken,\n          useValue: config.posts\n        },\n        {\n          provide: CommentsServiceConfigToken,\n          useValue: config.comments\n        },\n        {\n          provide: TopicsServiceConfigToken,\n          useValue: config.topics\n        }\n      ]\n    }\n  }\n\n}\n","/*\n * Public API Surface of blog\n */\n\nexport * from './lib/config/public-api';\nexport * from './lib/models/public-api';\nexport * from './lib/components/public-api';\nexport * from './lib/services/public-api';\nexport * from './lib/blog.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["InjectionToken","Subject","map","tap","catchError","throwError","Injectable","Inject","EventEmitter","Component","Input","Output","FormGroup","FormControl","Validators","Subscription","of","ViewChild","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","UtilsModule","MarkdownModule","OidcAuthModule","NgModule"],"mappings":"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"}