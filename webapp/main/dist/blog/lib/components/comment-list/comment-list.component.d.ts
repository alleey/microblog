import { OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { Pageable, PageModel } from 'utils';
import { CommentModel, CommentListResponseModel } from '../../models/comment';
import { CommentsService } from '../../services/comments.service';
import * as i0 from "@angular/core";
export declare class CommentListComponent implements OnInit, OnDestroy {
    private commentsService;
    private router;
    private activatedRoute;
    postId: number;
    noContentsTemplate: TemplateRef<any> | undefined;
    itemTemplate: TemplateRef<any> | undefined;
    headerTemplate: TemplateRef<any> | undefined;
    footerTemplate: TemplateRef<any> | undefined;
    state: any;
    pageable: Pageable;
    response: CommentListResponseModel | null;
    errorDesc: any;
    loading: boolean;
    subscription: Subscription;
    constructor(commentsService: CommentsService, router: Router, activatedRoute: ActivatedRoute);
    ngOnInit(): void;
    ngOnDestroy(): void;
    fetchPage(pageNum: number): void;
    get items(): CommentModel[];
    get page(): PageModel | undefined;
    gotoPage(evt: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CommentListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CommentListComponent, "blog-comment-list", never, { "postId": "postId"; "noContentsTemplate": "noContentsTemplate"; "itemTemplate": "itemTemplate"; "headerTemplate": "headerTemplate"; "footerTemplate": "footerTemplate"; }, {}, never, never>;
}
