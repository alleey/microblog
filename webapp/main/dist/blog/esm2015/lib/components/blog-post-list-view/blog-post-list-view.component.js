import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../topic-list-view/topic-list-view.component";
import * as i2 from "@angular/common";
import * as i3 from "utils";
export class BlogPostListViewComponent {
    constructor() {
        this.onSelectItem = new EventEmitter();
    }
    ngOnInit() { }
    selectItem(item, opcode) {
        this.onSelectItem.emit({
            opcode: opcode,
            item: item
        });
    }
}
BlogPostListViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.4", ngImport: i0, type: BlogPostListViewComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BlogPostListViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.4", type: BlogPostListViewComponent, selector: "blog-post-list-view", inputs: { posts: "posts", itemTemplate: "itemTemplate", noContentsTemplate: "noContentsTemplate" }, outputs: { onSelectItem: "onSelectItem" }, ngImport: i0, template: "<ng-container *ngIf=\"posts\">\n    <div *ngFor=\"let x of posts\" class=\"bg-light\">\n        <ng-container [ngTemplateOutlet]=\"itemTemplate || defaultItemTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: x, list: this }\">\n        </ng-container>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"!posts\">\n    <ng-container [ngTemplateOutlet]=\"noContentsTemplate || defaultNoContentsTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: this }\">\n    </ng-container>\n</ng-container>\n\n<ng-template #defaultItemTemplate let-item let-parent=\"list\">\n    <div class=\"p-1\">\n        <a (click)=\"parent.selectItem(item, 'select')\"><h4 class=\"blog-post-list-post-title\">{{item.title}}</h4></a>\n        <div class=\"created\"> {{item.owner}} created the post on {{item.createdOn | prettyDate }}.</div>\n        <p class=\"posttext \">\n            {{item.text}}\n        </p>\n        <p>\n            <blog-topic-list-view [topics]=\"item.topics\"></blog-topic-list-view>\n        </p>\n        <button class=\"btn btn-success\" (click)=\"parent.selectItem(item, 'select')\">Read More...</button>\n        <hr class=\"my-4\">\n    </div>\n</ng-template>\n\n<ng-template #defaultNoContentsTemplate let-item>\n    No blog posts found! Why not create one?\n</ng-template>", styles: [".created{padding-top:5px;padding-bottom:5px}.posttext{padding-top:10px;padding-bottom:10px}.blog-post-list-post-title{cursor:pointer;text-decoration:underline}"], components: [{ type: i1.TopicListViewComponent, selector: "blog-topic-list-view", inputs: ["topics", "itemTemplate", "noContentsTemplate"], outputs: ["onSelectItem"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "prettyDate": i3.PrettyDatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.4", ngImport: i0, type: BlogPostListViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'blog-post-list-view',
                    templateUrl: './blog-post-list-view.component.html',
                    styleUrls: ['./blog-post-list-view.component.scss'],
                }]
        }], propDecorators: { posts: [{
                type: Input
            }], itemTemplate: [{
                type: Input
            }], noContentsTemplate: [{
                type: Input
            }], onSelectItem: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxvZy1wb3N0LWxpc3Qtdmlldy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9ibG9nL3NyYy9saWIvY29tcG9uZW50cy9ibG9nLXBvc3QtbGlzdC12aWV3L2Jsb2ctcG9zdC1saXN0LXZpZXcuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYmxvZy9zcmMvbGliL2NvbXBvbmVudHMvYmxvZy1wb3N0LWxpc3Qtdmlldy9ibG9nLXBvc3QtbGlzdC12aWV3LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQWUsTUFBTSxlQUFlLENBQUM7Ozs7O0FBVzVGLE1BQU0sT0FBTyx5QkFBeUI7SUFMdEM7UUFZWSxpQkFBWSxHQUFHLElBQUksWUFBWSxFQUF5QixDQUFDO0tBVXBFO0lBUkMsUUFBUSxLQUFVLENBQUM7SUFFbkIsVUFBVSxDQUFDLElBQW1CLEVBQUUsTUFBYztRQUM1QyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQztZQUNyQixNQUFNLEVBQUUsTUFBTTtZQUNkLElBQUksRUFBRSxJQUFJO1NBQ1gsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7c0hBaEJVLHlCQUF5QjswR0FBekIseUJBQXlCLDBNQ1h0Qyw0eENBOEJjOzJGRG5CRCx5QkFBeUI7a0JBTHJDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsV0FBVyxFQUFFLHNDQUFzQztvQkFDbkQsU0FBUyxFQUFFLENBQUMsc0NBQXNDLENBQUM7aUJBQ3BEOzhCQUdVLEtBQUs7c0JBQWIsS0FBSztnQkFFRyxZQUFZO3NCQUFwQixLQUFLO2dCQUNHLGtCQUFrQjtzQkFBMUIsS0FBSztnQkFFSSxZQUFZO3NCQUFyQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFZpZXdFdmVudCB9IGZyb20gJ3V0aWxzJztcbmltcG9ydCB7IEJsb2dQb3N0TW9kZWwgfSBmcm9tICcuLi8uLi9tb2RlbHMvYmxvZy1wb3N0JztcblxuZXhwb3J0IHR5cGUgQmxvZ1Bvc3RMaXN0Vmlld0V2ZW50ID0gVmlld0V2ZW50PEJsb2dQb3N0TW9kZWw+O1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdibG9nLXBvc3QtbGlzdC12aWV3JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Jsb2ctcG9zdC1saXN0LXZpZXcuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9ibG9nLXBvc3QtbGlzdC12aWV3LmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIEJsb2dQb3N0TGlzdFZpZXdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgpIHBvc3RzITogQmxvZ1Bvc3RNb2RlbFtdO1xuXG4gIEBJbnB1dCgpIGl0ZW1UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PiB8IHVuZGVmaW5lZDtcbiAgQElucHV0KCkgbm9Db250ZW50c1RlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+IHwgdW5kZWZpbmVkO1xuXG4gIEBPdXRwdXQoKSBvblNlbGVjdEl0ZW0gPSBuZXcgRXZlbnRFbWl0dGVyPEJsb2dQb3N0TGlzdFZpZXdFdmVudD4oKTtcblxuICBuZ09uSW5pdCgpOiB2b2lkIHt9XG5cbiAgc2VsZWN0SXRlbShpdGVtOiBCbG9nUG9zdE1vZGVsLCBvcGNvZGU6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMub25TZWxlY3RJdGVtLmVtaXQoe1xuICAgICAgb3Bjb2RlOiBvcGNvZGUsXG4gICAgICBpdGVtOiBpdGVtXG4gICAgfSk7XG4gIH1cbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJwb3N0c1wiPlxuICAgIDxkaXYgKm5nRm9yPVwibGV0IHggb2YgcG9zdHNcIiBjbGFzcz1cImJnLWxpZ2h0XCI+XG4gICAgICAgIDxuZy1jb250YWluZXIgW25nVGVtcGxhdGVPdXRsZXRdPVwiaXRlbVRlbXBsYXRlIHx8IGRlZmF1bHRJdGVtVGVtcGxhdGVcIlxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cInsgJGltcGxpY2l0OiB4LCBsaXN0OiB0aGlzIH1cIj5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9kaXY+XG48L25nLWNvbnRhaW5lcj5cbjxuZy1jb250YWluZXIgKm5nSWY9XCIhcG9zdHNcIj5cbiAgICA8bmctY29udGFpbmVyIFtuZ1RlbXBsYXRlT3V0bGV0XT1cIm5vQ29udGVudHNUZW1wbGF0ZSB8fCBkZWZhdWx0Tm9Db250ZW50c1RlbXBsYXRlXCJcbiAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cInsgJGltcGxpY2l0OiB0aGlzIH1cIj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbjwvbmctY29udGFpbmVyPlxuXG48bmctdGVtcGxhdGUgI2RlZmF1bHRJdGVtVGVtcGxhdGUgbGV0LWl0ZW0gbGV0LXBhcmVudD1cImxpc3RcIj5cbiAgICA8ZGl2IGNsYXNzPVwicC0xXCI+XG4gICAgICAgIDxhIChjbGljayk9XCJwYXJlbnQuc2VsZWN0SXRlbShpdGVtLCAnc2VsZWN0JylcIj48aDQgY2xhc3M9XCJibG9nLXBvc3QtbGlzdC1wb3N0LXRpdGxlXCI+e3tpdGVtLnRpdGxlfX08L2g0PjwvYT5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNyZWF0ZWRcIj4ge3tpdGVtLm93bmVyfX0gY3JlYXRlZCB0aGUgcG9zdCBvbiB7e2l0ZW0uY3JlYXRlZE9uIHwgcHJldHR5RGF0ZSB9fS48L2Rpdj5cbiAgICAgICAgPHAgY2xhc3M9XCJwb3N0dGV4dCBcIj5cbiAgICAgICAgICAgIHt7aXRlbS50ZXh0fX1cbiAgICAgICAgPC9wPlxuICAgICAgICA8cD5cbiAgICAgICAgICAgIDxibG9nLXRvcGljLWxpc3QtdmlldyBbdG9waWNzXT1cIml0ZW0udG9waWNzXCI+PC9ibG9nLXRvcGljLWxpc3Qtdmlldz5cbiAgICAgICAgPC9wPlxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1zdWNjZXNzXCIgKGNsaWNrKT1cInBhcmVudC5zZWxlY3RJdGVtKGl0ZW0sICdzZWxlY3QnKVwiPlJlYWQgTW9yZS4uLjwvYnV0dG9uPlxuICAgICAgICA8aHIgY2xhc3M9XCJteS00XCI+XG4gICAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuXG48bmctdGVtcGxhdGUgI2RlZmF1bHROb0NvbnRlbnRzVGVtcGxhdGUgbGV0LWl0ZW0+XG4gICAgTm8gYmxvZyBwb3N0cyBmb3VuZCEgV2h5IG5vdCBjcmVhdGUgb25lP1xuPC9uZy10ZW1wbGF0ZT4iXX0=