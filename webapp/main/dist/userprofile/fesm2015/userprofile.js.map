{"version":3,"file":"userprofile.js","sources":["../../../projects/userprofile/src/lib/config/config.ts","../../../projects/userprofile/src/lib/config/public-api.ts","../../../projects/userprofile/src/lib/services/user-profile.service.ts","../../../projects/userprofile/src/lib/components/user-profile-badge-view/user-profile-badge-view.component.ts","../../../projects/userprofile/src/lib/components/user-profile-badge-view/user-profile-badge-view.component.html","../../../projects/userprofile/src/lib/components/user-profile-badge/user-profile-badge.component.ts","../../../projects/userprofile/src/lib/components/user-profile-badge/user-profile-badge.component.html","../../../projects/userprofile/src/lib/components/public-api.ts","../../../projects/userprofile/src/lib/models/public-api.ts","../../../projects/userprofile/src/lib/services/public-api.ts","../../../projects/userprofile/src/lib/userprofile.module.ts","../../../projects/userprofile/src/public-api.ts","../../../projects/userprofile/src/userprofile.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface UserProfileServiceConfig {\n  serviceBaseUrl: string,\n  defaultEndpoint: string,\n  pageSize: number,\n}\n\nexport const UserProfileServiceConfigToken = new InjectionToken<UserProfileServiceConfig>(\"UserProfileServiceConfig\");\n\nexport interface UserProfileModuleConfig {\n  userProfiles: UserProfileServiceConfig;\n}\nexport const UserProfileModuleConfigToken = new InjectionToken<UserProfileModuleConfig>(\"UserProfileModuleConfig\");\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './config';\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UserProfileServiceConfig, UserProfileServiceConfigToken } from '../config/config';\nimport { UserProfileResponseModel } from '../models/user-profile';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfileService {\n\n  constructor(\n    @Inject(UserProfileServiceConfigToken) \n    private config: UserProfileServiceConfig,\n    private httpClient: HttpClient) { \n  }\n\n  public one(endpoint: string, id: string): Observable<UserProfileResponseModel> {\n\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n              .get<UserProfileResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${id}`)\n              .pipe(\n                map(data => {\n                  return data as UserProfileResponseModel;\n                })\n              );\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ViewEvent } from 'utils';\nimport { UserProfileModel } from '../../models/user-profile';\n\nexport type UserProfileBadgeViewEvent = ViewEvent<UserProfileModel>;\n\n@Component({\n  selector: 'user-profile-badge-view',\n  templateUrl: './user-profile-badge-view.component.html',\n  styleUrls: ['./user-profile-badge-view.component.css']\n})\nexport class UserProfileBadgeViewComponent implements OnInit {\n\n  @Input() userProfile!: UserProfileModel;\n\n  @Input() contentTemplate: TemplateRef<any> | undefined;\n\n  @Output() onSelectItem = new EventEmitter<UserProfileBadgeViewEvent>();\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  get userId(): string {\n    return this.userProfile.id;\n  }\n\n  selectItem(item: UserProfileModel, opcode: string): void {\n    this.onSelectItem.emit({\n      opcode: opcode,\n      item: item\n    });\n  }\n}\n","<ng-container \n  [ngTemplateOutlet]=\"contentTemplate || defaultContentTemplate\"\n  [ngTemplateOutletContext]=\"{ $implicit: userProfile, list: this }\" \n  *ngIf=\"userProfile\">\n</ng-container>\n\n<ng-template #defaultContentTemplate let-item let-parent=\"list\">\n  <span (click)=\"parent.selectItem(item, 'select')\" class=\"fullname\">{{item.firstName}} {{item.lastName}}</span>\n</ng-template>\n","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserProfileModel, UserProfileResponseModel } from '../../models/user-profile';\nimport { UserProfileService } from '../../services/user-profile.service';\nimport { UserProfileBadgeViewEvent } from '../user-profile-badge-view/user-profile-badge-view.component';\n\n@Component({\n  selector: 'user-profile-badge',\n  templateUrl: './user-profile-badge.component.html',\n  styleUrls: ['./user-profile-badge.component.css']\n})\nexport class UserProfileBadgeComponent implements OnInit {\n\n  @Input(\"userid\") paramUserId?: string;\n  @Input() contentTemplate: TemplateRef<any> | undefined;\n  @Input() onSelect: (topic: UserProfileModel) => void = (item) => {};\n\n  userId?: string;\n\n  response : UserProfileResponseModel|null;\n  errorDesc: any = \"\";\n  loading: boolean = false;\n\n  constructor(\n    private userProfileService: UserProfileService, \n    private router: Router, \n    private activatedRoute: ActivatedRoute) \n  { \n    this.response = null;\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      this.userId = params.userId ?? this.paramUserId;\n      this.fetchUserProfile(this.userId!);\n    });\n  }\n\n  fetchUserProfile(userId: string): void {\n    this.userId = userId;\n\n    this.loading = true;\n    this.userProfileService.one(\"\", this.userId)\n      .subscribe(\n      {\n        next: (result: UserProfileResponseModel) => {\n          this.response = result;\n          this.loading = false;\n        },\n        error: (err: any) => {\n          this.errorDesc = err.message;\n          this.loading = false;\n          console.log(this.errorDesc);\n        }\n      }\n    );\n  }\n\n  get userProfileItem(): UserProfileModel {\n    return this.response!;\n  }\n\n  handleViewEvent(evt: UserProfileBadgeViewEvent) {\n    switch(evt.opcode) {\n      case 'select': this.onSelect(evt.item); break;\n    }\n  }\n}\n","<utils-loader *ngIf=\"loading; else contents\"></utils-loader>\n\n<ng-template #contents>\n    <utils-alert *ngIf=\"errorDesc; else viewer\" [dismissable]=\"false\" [minimal]=\"false\">\n        <p>An error occurred accessing the post: {{ errorDesc }}</p>\n    </utils-alert>\n</ng-template>\n\n<ng-template #viewer>\n    <user-profile-badge-view\n        [userProfile]=\"userProfileItem\" \n        [contentTemplate]=\"contentTemplate\"\n        (onSelectItem)=\"handleViewEvent($event)\">\n    </user-profile-badge-view>\n</ng-template>","/*\n * Public API Surface of user-profile\n */\n\nexport * from './user-profile-badge/user-profile-badge.component';\nexport * from './user-profile-badge-view/user-profile-badge-view.component';\n","/*\n * Public API Surface of user-profile\n */\n\nexport * from './user-profile';\n","/*\n * Public API Surface of user-profile\n */\n\nexport * from './user-profile.service';\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { UtilsModule } from 'utils';\nimport { UserProfileModuleConfig, UserProfileServiceConfigToken } from './config/config';\nimport { UserProfileService } from './services/user-profile.service';\nimport { UserProfileBadgeViewComponent } from './components/user-profile-badge-view/user-profile-badge-view.component';\nimport { UserProfileBadgeComponent } from './components/user-profile-badge/user-profile-badge.component';\n\n@NgModule({\n  declarations: [\n    UserProfileBadgeViewComponent,\n    UserProfileBadgeComponent\n  ],\n  imports: [\n    CommonModule,\n    UtilsModule\n  ],\n  exports: [\n    UserProfileBadgeViewComponent,\n    UserProfileBadgeComponent\n  ]\n})\nexport class UserProfileModule { \n\n  static forRoot(config: UserProfileModuleConfig): ModuleWithProviders<UserProfileModule> {\n    return {\n      ngModule: UserProfileModule,\n      providers: [\n        UserProfileService,\n        {\n          provide: UserProfileServiceConfigToken,\n          useValue: config.userProfiles\n        }\n      ]\n    }\n  }\n\n}\n","/*\n * Public API Surface of userprofile\n */\n\nexport * from './lib/config/public-api';\nexport * from './lib/components/public-api';\nexport * from './lib/models/public-api';\nexport * from './lib/services/public-api';\nexport * from './lib/userprofile.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}