{"version":3,"file":"userprofile.umd.js","sources":["../../../projects/userprofile/src/lib/config/config.ts","../../../projects/userprofile/src/lib/config/public-api.ts","../../../projects/userprofile/src/lib/services/user-profile.service.ts","../../../projects/userprofile/src/lib/components/user-profile-badge-view/user-profile-badge-view.component.ts","../../../projects/userprofile/src/lib/components/user-profile-badge-view/user-profile-badge-view.component.html","../../../projects/userprofile/src/lib/components/user-profile-badge/user-profile-badge.component.ts","../../../projects/userprofile/src/lib/components/user-profile-badge/user-profile-badge.component.html","../../../projects/userprofile/src/lib/components/public-api.ts","../../../projects/userprofile/src/lib/models/public-api.ts","../../../projects/userprofile/src/lib/services/public-api.ts","../../../projects/userprofile/src/lib/userprofile.module.ts","../../../projects/userprofile/src/public-api.ts","../../../projects/userprofile/src/userprofile.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface UserProfileServiceConfig {\n  serviceBaseUrl: string,\n  defaultEndpoint: string,\n  pageSize: number,\n}\n\nexport const UserProfileServiceConfigToken = new InjectionToken<UserProfileServiceConfig>(\"UserProfileServiceConfig\");\n\nexport interface UserProfileModuleConfig {\n  userProfiles: UserProfileServiceConfig;\n}\nexport const UserProfileModuleConfigToken = new InjectionToken<UserProfileModuleConfig>(\"UserProfileModuleConfig\");\n","/*\n * Public API Surface of bookmarks\n */\n\nexport * from './config';\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { UserProfileServiceConfig, UserProfileServiceConfigToken } from '../config/config';\nimport { UserProfileResponseModel } from '../models/user-profile';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfileService {\n\n  constructor(\n    @Inject(UserProfileServiceConfigToken) \n    private config: UserProfileServiceConfig,\n    private httpClient: HttpClient) { \n  }\n\n  public one(endpoint: string, id: string): Observable<UserProfileResponseModel> {\n\n    const apiEndpoint = endpoint ? endpoint : this.config.defaultEndpoint;\n    return this.httpClient\n              .get<UserProfileResponseModel>(`${this.config.serviceBaseUrl}/${apiEndpoint}/${id}`)\n              .pipe(\n                map(data => {\n                  return data as UserProfileResponseModel;\n                })\n              );\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ViewEvent } from 'utils';\nimport { UserProfileModel } from '../../models/user-profile';\n\nexport type UserProfileBadgeViewEvent = ViewEvent<UserProfileModel>;\n\n@Component({\n  selector: 'user-profile-badge-view',\n  templateUrl: './user-profile-badge-view.component.html',\n  styleUrls: ['./user-profile-badge-view.component.css']\n})\nexport class UserProfileBadgeViewComponent implements OnInit {\n\n  @Input() userProfile!: UserProfileModel;\n\n  @Input() contentTemplate: TemplateRef<any> | undefined;\n\n  @Output() onSelectItem = new EventEmitter<UserProfileBadgeViewEvent>();\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  get userId(): string {\n    return this.userProfile.id;\n  }\n\n  selectItem(item: UserProfileModel, opcode: string): void {\n    this.onSelectItem.emit({\n      opcode: opcode,\n      item: item\n    });\n  }\n}\n","<ng-container \n  [ngTemplateOutlet]=\"contentTemplate || defaultContentTemplate\"\n  [ngTemplateOutletContext]=\"{ $implicit: userProfile, list: this }\" \n  *ngIf=\"userProfile\">\n</ng-container>\n\n<ng-template #defaultContentTemplate let-item let-parent=\"list\">\n  <span (click)=\"parent.selectItem(item, 'select')\" class=\"fullname\">{{item.firstName}} {{item.lastName}}</span>\n</ng-template>\n","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserProfileModel, UserProfileResponseModel } from '../../models/user-profile';\nimport { UserProfileService } from '../../services/user-profile.service';\nimport { UserProfileBadgeViewEvent } from '../user-profile-badge-view/user-profile-badge-view.component';\n\n@Component({\n  selector: 'user-profile-badge',\n  templateUrl: './user-profile-badge.component.html',\n  styleUrls: ['./user-profile-badge.component.css']\n})\nexport class UserProfileBadgeComponent implements OnInit {\n\n  @Input(\"userid\") paramUserId?: string;\n  @Input() contentTemplate: TemplateRef<any> | undefined;\n  @Input() onSelect: (topic: UserProfileModel) => void = (item) => {};\n\n  userId?: string;\n\n  response : UserProfileResponseModel|null;\n  errorDesc: any = \"\";\n  loading: boolean = false;\n\n  constructor(\n    private userProfileService: UserProfileService, \n    private router: Router, \n    private activatedRoute: ActivatedRoute) \n  { \n    this.response = null;\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      this.userId = params.userId ?? this.paramUserId;\n      this.fetchUserProfile(this.userId!);\n    });\n  }\n\n  fetchUserProfile(userId: string): void {\n    this.userId = userId;\n\n    this.loading = true;\n    this.userProfileService.one(\"\", this.userId)\n      .subscribe(\n      {\n        next: (result: UserProfileResponseModel) => {\n          this.response = result;\n          this.loading = false;\n        },\n        error: (err: any) => {\n          this.errorDesc = err.message;\n          this.loading = false;\n          console.log(this.errorDesc);\n        }\n      }\n    );\n  }\n\n  get userProfileItem(): UserProfileModel {\n    return this.response!;\n  }\n\n  handleViewEvent(evt: UserProfileBadgeViewEvent) {\n    switch(evt.opcode) {\n      case 'select': this.onSelect(evt.item); break;\n    }\n  }\n}\n","<utils-loader *ngIf=\"loading; else contents\"></utils-loader>\n\n<ng-template #contents>\n    <utils-alert *ngIf=\"errorDesc; else viewer\" [dismissable]=\"false\" [minimal]=\"false\">\n        <p>An error occurred accessing the post: {{ errorDesc }}</p>\n    </utils-alert>\n</ng-template>\n\n<ng-template #viewer>\n    <user-profile-badge-view\n        [userProfile]=\"userProfileItem\" \n        [contentTemplate]=\"contentTemplate\"\n        (onSelectItem)=\"handleViewEvent($event)\">\n    </user-profile-badge-view>\n</ng-template>","/*\n * Public API Surface of user-profile\n */\n\nexport * from './user-profile-badge/user-profile-badge.component';\nexport * from './user-profile-badge-view/user-profile-badge-view.component';\n","/*\n * Public API Surface of user-profile\n */\n\nexport * from './user-profile';\n","/*\n * Public API Surface of user-profile\n */\n\nexport * from './user-profile.service';\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { UtilsModule } from 'utils';\nimport { UserProfileModuleConfig, UserProfileServiceConfigToken } from './config/config';\nimport { UserProfileService } from './services/user-profile.service';\nimport { UserProfileBadgeViewComponent } from './components/user-profile-badge-view/user-profile-badge-view.component';\nimport { UserProfileBadgeComponent } from './components/user-profile-badge/user-profile-badge.component';\n\n@NgModule({\n  declarations: [\n    UserProfileBadgeViewComponent,\n    UserProfileBadgeComponent\n  ],\n  imports: [\n    CommonModule,\n    UtilsModule\n  ],\n  exports: [\n    UserProfileBadgeViewComponent,\n    UserProfileBadgeComponent\n  ]\n})\nexport class UserProfileModule { \n\n  static forRoot(config: UserProfileModuleConfig): ModuleWithProviders<UserProfileModule> {\n    return {\n      ngModule: UserProfileModule,\n      providers: [\n        UserProfileService,\n        {\n          provide: UserProfileServiceConfigToken,\n          useValue: config.userProfiles\n        }\n      ]\n    }\n  }\n\n}\n","/*\n * Public API Surface of userprofile\n */\n\nexport * from './lib/config/public-api';\nexport * from './lib/components/public-api';\nexport * from './lib/models/public-api';\nexport * from './lib/services/public-api';\nexport * from './lib/userprofile.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["InjectionToken","map","Injectable","Inject","EventEmitter","Component","Input","Output","CommonModule","UtilsModule","NgModule"],"mappings":"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"}